{"version":3,"sources":["services/AuthProvider.ts","components/Header.jsx","components/PostStatistics.jsx","components/PostCard.jsx","components/PostList.jsx","components/Footer.jsx","components/Comment.jsx","services/utils.js","components/AddComment.jsx","components/Post.jsx","components/UserPostList.jsx","components/EditPost.jsx","components/NotFound.jsx","components/Login.jsx","components/UserProfile.jsx","App.js","index.js"],"names":["createTokenProvider","_token","JSON","parse","localStorage","getItem","e","loadFromStorage","extractUserId","split","accessToken","length","atob","sub","isLoggedIn","getExpirationDate","token","jwt","exp","Number","isFinite","observers","setToken","setItem","stringify","removeItem","isLogged","forEach","o","notify","getToken","a","Date","now","fetch","method","body","refreshToken","then","r","json","catch","updateToken","subscribe","observer","push","unsubscribe","filter","getUserId","tokenProvider","useAuth","useState","setLogged","useEffect","listener","newIsLogged","authFetch","input","init","headers","Authorization","login","newToken","logout","createAuthProvider","Header","context","useContext","AppContext","history","useHistory","isAuth","tr","setTr","userAvaUrl","setUserAvaUrl","avatar","trigger","console","log","window","location","origin","response","ok","status","showAuth","url","Error","err","style","display","flexDirection","justifyContent","flexGrow","flexShrink","flexBasis","alignItems","marginRight","Avatar","src","on","position","closeOnDocumentClick","mouseEnterDelay","className","onClick","borderBottom","cursor","fontSize","PostStatistics","post","margin","postStatistics","likeCount","dislikeCount","d","toLocaleDateString","month","date","year","formatDate","publicationTime","viewCount","commentCount","PostCard","width","border","borderWidth","borderRadius","borderColor","id","postCardImageUrl","marginLeft","fontWeight","title","PostList","postList","pageNumber","totalPages","hasNext","posts","setPosts","fetchPosts","nextPage","URL","params","pageSize","sort","Object","keys","key","searchParams","append","postCartDataList","height","overflowY","dataLength","next","hasMore","loader","CircularProgress","endMessage","scrollableTarget","flexWrap","map","Footer","Comment","comment","pointerEvents","userId","text","commentText","setCommentText","isShow","error","edit","setEdit","marginTop","user","avatarUrl","firstName","lastName","isEnabled","IconButton","color","paddingBottom","paddingTop","likes","dislikes","alignSelf","Button","variant","postId","result","TextField","onChange","target","value","helperText","multiline","rowsMax","marginBottom","AddComment","comments","setComments","postData","setPostData","setText","isError","setError","event","textAlign","commentList","newPost","isVote","voteValue","Post","useParams","voteStyle","fetchComments","fetchPost","dangerouslySetInnerHTML","__html","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","UserPostList","quillObject","tableRef","useRef","state","setState","isOpen","isConfirmOpen","setConfirmOpen","statusChangeHandler","current","onQueryChange","moveToNewPost","open","onClose","onDelete","boxShadow","columns","field","render","rowData","cellStyle","editable","Checkbox","checked","isActive","editComponent","type","components","Toolbar","RadioGroup","aria-label","FormControlLabel","labelPlacement","control","Radio","label","data","query","Promise","resolve","reject","page","postByUserList","totalElements","totalCount","onRowUpdate","newData","oldData","actions","icon","tooltip","icons","options","actionsColumnIndex","uploadFile","formData","range","getEditorSelection","getEditor","insertEmbed","index","modules","toolbar","container","header","font","size","list","indent","align","handlers","image","document","createElement","setAttribute","click","onchange","file","files","FormData","clipboard","matchVisual","EditPost","isEdit","isNew","pathId","undefined","pubDatetime","setPubDatetime","headerImageUrl","setHeaderImageUrl","name","resize","rows","accept","el","NotFound","Login","show","handleClose","loginClassName","username","password","credentials","setCredentials","right","top","onSubmit","preventDefault","authToken","get","UserProfile","role","userData","setUserData","readOnly","setReadOnly","isEditOpen","setEditOpen","onDrop","useCallback","acceptedFiles","createObjectURL","useDropzone","minSize","multiple","getRootProps","getInputProps","isDragActive","isDragReject","background","inputProps","defaultValue","email","registrationDate","React","createContext","App","setShowAuth","Provider","exact","path","to","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cd0ff2a1.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst createTokenProvider = () => {\r\n  const loadFromStorage = (): {\r\n    accessToken: string;\r\n    refreshToken: string;\r\n  } | null => {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(\"REACT_TOKEN_AUTH\") || \"null\");\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  let _token = loadFromStorage();\r\n\r\n  const extractUserId = ():String | null => {\r\n    if (_token === null) return null;\r\n\r\n    const split = _token.accessToken.split(\".\");\r\n\r\n    if (split.length < 2) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      const jwt = JSON.parse(atob(split[1]));\r\n      return jwt.sub;\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  let _userId = extractUserId();\r\n\r\n  const getUserId = ():String|null =>{\r\n    return extractUserId();\r\n  }\r\n\r\n  const isLoggedIn = () => {\r\n    return !!_token;\r\n  };\r\n\r\n  const getExpirationDate = (token?: any): number | null => {\r\n    if (!(typeof token === \"string\")) {\r\n      return null;\r\n    }\r\n\r\n    const split = token.split(\".\");\r\n\r\n    if (split.length < 2) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      const jwt = JSON.parse(atob(split[1]));\r\n      if (jwt && jwt.exp && Number.isFinite(jwt.exp)) {\r\n        return jwt.exp * 1000;\r\n      } else {\r\n        return null;\r\n      }\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const isExpired = (exp: number | null): boolean => {\r\n    if (!exp) {\r\n      return false;\r\n    }\r\n\r\n    return Date.now() > exp;\r\n  };\r\n\r\n  let observers: Array<(isLogged: boolean) => void> = [];\r\n\r\n  const subscribe = (observer: (isLogged: boolean) => void) => {\r\n    observers.push(observer);\r\n  };\r\n\r\n  const unsubscribe = (observer: (isLogged: boolean) => void) => {\r\n    observers = observers.filter((o) => o !== observer);\r\n  };\r\n\r\n  const notify = () => {\r\n    const isLogged = isLoggedIn();\r\n    observers.forEach((o) => o(isLogged));\r\n  };\r\n\r\n  const setToken = (token: typeof _token | null) => {\r\n    if (token) {\r\n      localStorage.setItem(\"REACT_TOKEN_AUTH\", JSON.stringify(token));\r\n      _userId = extractUserId();\r\n    } else {\r\n      localStorage.removeItem(\"REACT_TOKEN_AUTH\");\r\n      _userId = null;\r\n    }\r\n    _token = token;\r\n    notify();\r\n  };\r\n\r\n  const getToken = async (): Promise<String> => {\r\n    if (!_token) {\r\n      return \"\";\r\n    }\r\n\r\n    if (isExpired(getExpirationDate(_token.accessToken))) {\r\n      const updateToken = await fetch(\"/update-token\", {\r\n        method: \"POST\",\r\n        body: _token.refreshToken,\r\n      })\r\n        .then((r) => r.json())\r\n        .catch(() => null); ///\r\n\r\n      if (typeof updateToken !== typeof _token) {\r\n        setToken(null);\r\n      }\r\n\r\n      setToken(updateToken);\r\n    }\r\n\r\n    return _token.accessToken;\r\n  };\r\n\r\n  return {\r\n    getToken,\r\n    isLoggedIn,\r\n    setToken,\r\n    subscribe,\r\n    unsubscribe,\r\n    getUserId,\r\n  };\r\n};\r\n\r\nexport const createAuthProvider = () => {\r\n  const tokenProvider = createTokenProvider();\r\n\r\n  const login: typeof tokenProvider.setToken = (newToken) => {\r\n    tokenProvider.setToken(newToken);\r\n  };\r\n\r\n  const logout = () => {\r\n    tokenProvider.setToken(null);\r\n  };\r\n\r\n  const authFetch = async (\r\n    input: RequestInfo,\r\n    init?: RequestInit\r\n  ): Promise<Response> => {\r\n    const token = await tokenProvider.getToken();\r\n\r\n    init = init || {};\r\n\r\n    if (token === \"\") {\r\n      return fetch(input, init);\r\n    }\r\n\r\n    init.headers = {\r\n      ...init.headers,\r\n      Authorization: `${token}`,\r\n    };\r\n\r\n    return fetch(input, init);\r\n  };\r\n\r\n  const useAuth = () => {\r\n    const [isLogged, setLogged] = useState(tokenProvider.isLoggedIn());\r\n\r\n    useEffect(() => {\r\n      const listener = (newIsLogged: boolean) => {\r\n        setLogged(newIsLogged);\r\n      };\r\n\r\n      tokenProvider.subscribe(listener);\r\n      return () => {\r\n        tokenProvider.unsubscribe(listener);\r\n      };\r\n    }, []);\r\n\r\n    return [isLogged] as [typeof isLogged];\r\n  };\r\n\r\n  const getUserId = ():String|null => {\r\n    return tokenProvider.getUserId();\r\n  };\r\n\r\n  return {\r\n    useAuth,\r\n    authFetch,\r\n    login,\r\n    logout,\r\n    getUserId,\r\n  };\r\n};\r\n\r\nexport const { useAuth, authFetch, login, logout, getUserId } = createAuthProvider();\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../App\";\r\nimport { authFetch, getUserId, logout, useAuth } from \"../services/AuthProvider\";\r\nimport \"react-dropdown/style.css\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"../css/user-popup-menu.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nfunction Header() {\r\n  let context = useContext(AppContext);\r\n\r\n  let history = useHistory();\r\n\r\n  let [isAuth] = useAuth();\r\n\r\n  const [tr, setTr] = useState(false);\r\n\r\n  const [userAvaUrl, setUserAvaUrl] = useState(\"\");\r\n\r\n  context.avatar.trigger = tr; \r\n  context.avatar.fetch = setTr;\r\n\r\n  const onAuthClick = () => {\r\n    context.showAuth(true);\r\n  };\r\n\r\n  const moveToMyPosts = () => {\r\n    history.push(\"/post/user\");\r\n  };\r\n\r\n  const moveToProfile = () => {\r\n    history.push(\"/profile\");\r\n  };\r\n\r\n  const doLogout = () => {\r\n    logout();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const fetchUserAvatar = () => {\r\n    console.log(isAuth);\r\n    console.log(\"fetch ava\");\r\n    if (!isAuth) return;\r\n    authFetch(`${window.location.origin}/users/avatar/${getUserId()}`)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          return { body: {url: \"\"} };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        setUserAvaUrl(body.url);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => fetchUserAvatar(), [tr]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        flexGrow: 0,\r\n        flexShrink: 1,\r\n        flexBasis: \"auto\",\r\n      }}\r\n    >\r\n      <div>\r\n        <h1>Simple blog</h1>\r\n      </div>\r\n      <div\r\n        style={{ display: \"flex\", alignItems: \"center\", marginRight: \"3rem\" }}\r\n      >\r\n        <div style={{ marginRight: \"1rem\" }}>\r\n          {/* <img src={SearchLogo} style={{ width: \"4vh\" }} /> */}\r\n        </div>\r\n        {isAuth === true ? (\r\n          <Popup\r\n            trigger={<Avatar src={userAvaUrl} />}\r\n            on=\"hover\"\r\n            position=\"bottom center\"\r\n            closeOnDocumentClick\r\n            mouseEnterDelay={300}\r\n            mouseEnterDelay={0}\r\n            arrow={false}\r\n          >\r\n            <div className=\"user-popup-menu\">\r\n              <div className=\"user-popup-menu-item\">\r\n                <button className=\"btn\" onClick={moveToMyPosts}>\r\n                  My posts\r\n                </button>\r\n              </div>\r\n              <div className=\"user-popup-menu-item\">\r\n                <button className=\"btn\" onClick={moveToProfile}>\r\n                  Profile\r\n                </button>\r\n              </div>\r\n              <div className=\"user-popup-menu-item\">Statistics</div>\r\n              <div\r\n                className=\"user-popup-menu-item\"\r\n                style={{ borderBottom: \"none\" }}\r\n              >\r\n                <button className=\"btn\" onClick={doLogout}>\r\n                  Logout\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Popup>\r\n        ) : (\r\n          <div onClick={onAuthClick} style={{ cursor: \"pointer\" }}>\r\n            <AccountCircleIcon fontSize=\"large\"/>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\n\r\nfunction PostStatistics({ post }) {\r\n  const formatDate = (d) => {\r\n    let [month, date, year] = new Date(d + \"Z\")\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${date}.${month}.${year}`;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        margin: \"0.5rem\",\r\n        justifyContent: \"space-around\",\r\n      }}\r\n    >\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <div style={{ marginRight: \"0.25rem\" }}>\r\n          <ThumbUpIcon />\r\n        </div>\r\n        <div>{post.postStatistics.likeCount}</div>\r\n      </div>\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <div style={{ marginRight: \"0.25rem\" }}>\r\n          <ThumbDownIcon />\r\n        </div>\r\n        <div>{post.postStatistics.dislikeCount}</div>\r\n      </div>\r\n      <div>{formatDate(post.publicationTime)}</div>\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <div style={{ marginRight: \"0.25rem\" }}>\r\n          <VisibilityIcon />\r\n        </div>\r\n        <div>{post.postStatistics.viewCount}</div>\r\n      </div>\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <div style={{ marginRight: \"0.25rem\" }}>\r\n          <ChatBubbleOutlineIcon />\r\n        </div>\r\n        <div>{post.postStatistics.commentCount}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostStatistics;\r\n","import { useHistory } from \"react-router\";\r\nimport PostStatistics from \"./PostStatistics\";\r\n\r\nfunction PostCard({ post }) {\r\n  let history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    history.push(\"/post/view/\" + post.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 375,\r\n        border: \"solid\",\r\n        borderWidth: 1,\r\n        borderRadius: 15,\r\n        borderColor: \"rgb(228, 228, 228)\",\r\n        margin: \"0.5rem\",\r\n      }}\r\n    >\r\n      <div>\r\n        <button className=\"btn\" onClick={handleClick}>\r\n          <div>\r\n            <img\r\n              src={post.postCardImageUrl}\r\n              style={{ borderRadius: 10, width: \"100%\" }}\r\n            />\r\n          </div>\r\n        </button>\r\n      </div>\r\n      <div style={{marginLeft: \"0.5rem\", marginRight: \"0.5rem\"}}>\r\n        <span style={{ fontWeight: 600 }}>{post.title}</span>\r\n      </div>\r\n      <div>\r\n        <PostStatistics post={post} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostCard;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport PostCard from \"./PostCard\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { authFetch, useAuth } from \"../services/AuthProvider\";\r\nimport { AppContext } from \"../App\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction PostList() {\r\n  let history = useHistory();\r\n\r\n  let context = useContext(AppContext);\r\n\r\n  // let isAuth = useAuth();\r\n\r\n  const [posts, setPosts] = useState({\r\n    postList: [],\r\n    pageNumber: -1,\r\n    totalPages: 2,\r\n    hasNext: true,\r\n  });\r\n\r\n  const fetchPosts = () => {\r\n    let nextPage = posts.pageNumber + 1;\r\n    let hasNext = !(nextPage === posts.totalPages);\r\n    let url = new URL(window.location.origin + \"/posts\");\r\n    let params = {\r\n      pageNumber: nextPage,\r\n      pageSize: 12,\r\n      sort: \"id\",\r\n    };\r\n    Object.keys(params).forEach((key) =>\r\n      url.searchParams.append(key, params[key])\r\n    );\r\n    authFetch(url)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          //todo add redirect\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        setPosts({\r\n          postList: [...posts.postList, ...body.postCartDataList],\r\n          pageNumber: nextPage,\r\n          hasNext: hasNext,\r\n          totalPages: body.totalPages,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => fetchPosts(), []);\r\n\r\n  return (\r\n    <div id=\"scrollableDiv\" style={{ height: \"100vh\", overflowY: \"auto\" }}>\r\n      <InfiniteScroll\r\n        dataLength={posts.postList.length}\r\n        next={fetchPosts}\r\n        hasMore={posts.hasNext}\r\n        loader={\r\n          <div\r\n            style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            <CircularProgress />\r\n          </div>\r\n        }\r\n        endMessage={\r\n          <div style={{ width: \"100%\" }}>\r\n            <span>No moaaar!!</span>\r\n          </div>\r\n        }\r\n        scrollableTarget=\"scrollableDiv\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      >\r\n        {posts.postList.map((post) => (\r\n          <PostCard key={post.id} post={post} />\r\n        ))}\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostList;\r\n","function Footer() {\r\n  return (\r\n    <div style={{flexGrow: 0, flexShrink: 1, flexBasis: 70}}>\r\n      <span>Otus diploma project</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\n\r\nimport { Avatar, Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { useContext, useState } from \"react\";\r\nimport { AppContext } from \"../App\";\r\nimport { authFetch, getUserId } from \"../services/AuthProvider\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Comment({ comment, isAuth }) {\r\n\r\n  let context = useContext(AppContext);\r\n\r\n  let style = isAuth ? {} : { cursor: \"not-allowed\", pointerEvents: \"none\" };\r\n\r\n  let userId = getUserId();\r\n\r\n  let history = useHistory();\r\n\r\n  const onLike = () => {};\r\n\r\n  const [commentText, setCommentText] = useState(comment.text);\r\n\r\n  const [edit, setEdit] = useState({ isShow: false, text: \"\", error: false });\r\n\r\n  const onOpenEdit = () => {\r\n    setEdit({ isShow: !edit.isShow, text: commentText, error: false });\r\n  };\r\n\r\n  const onEditFieldChange = (e) => {\r\n    setEdit({ isShow: edit.isShow, text: e.target.value, error: false });\r\n  };\r\n\r\n  const onEditSubmit = () => {\r\n    if (edit.text === \"\") {\r\n      setEdit({ isShow: edit.isShow, text: edit.text, error: true });\r\n    }\r\n    authFetch(`${window.location.origin}/comments/${comment.id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        postId: comment.postId,\r\n        text: edit.text,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          return { result: false };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        if (body.result === true) {\r\n          setCommentText(edit.text);\r\n          setEdit({ isShow: false, text: \"\", error: false });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const onDislike = () => {};\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"0.5rem\" }}>\r\n      <Avatar src={comment.user.avatarUrl} />\r\n      <div style={{ width: \"100%\" }}>\r\n        <div style={{ marginLeft: \"0.25rem\" }}>\r\n          <span\r\n            style={{ fontWeight: 600 }}\r\n          >{`${comment.user.firstName} ${comment.user.lastName}`}</span>\r\n        </div>\r\n        {comment.isEnabled === true ? (\r\n          <div>\r\n            <div style={{ marginLeft: \"0.5rem\" }}>{commentText}</div>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginRight: \"0.5rem\",\r\n                  }}\r\n                >\r\n                  <div style={{ marginRight: \"0.25rem\" }}>\r\n                    <IconButton color=\"primary\" onClick={onLike} style={style}>\r\n                      <ThumbUpIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div style={{ paddingBottom: 12, paddingTop: 12 }}>\r\n                    {comment.likes}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginRight: \"0.5rem\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <div style={{ marginRight: \"0.25rem\" }}>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={onDislike}\r\n                      style={style}\r\n                    >\r\n                      <ThumbDownIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div style={{ paddingBottom: 12, paddingTop: 12 }}>\r\n                    {comment.dislikes}\r\n                  </div>\r\n                </div>\r\n                {isAuth && comment.user.id === userId ? (\r\n                  <div style={{ alignSelf: \"center\" }}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      onClick={onOpenEdit}\r\n                      style={{ marginRight: \"1rem\" }}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                    {edit.isShow ? (\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={onEditSubmit}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {edit.isShow ? (\r\n              <div>\r\n                <TextField\r\n                  onChange={onEditFieldChange}\r\n                  helperText={edit.error ? \"Comment must not be empty\" : \"\"}\r\n                  error={edit.error}\r\n                  value={edit.text}\r\n                  multiline\r\n                  rowsMax={5}\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}>\r\n            <span style={{ color: \"rgb(150,0,0)\" }}>\r\n              The comment was blocked\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n","export const formatDate = (d) => {\r\n  let [month, date, year] = new Date(d + \"Z\")\r\n    .toLocaleDateString(\"en-US\")\r\n    .split(\"/\");\r\n  return `${date}.${month}.${year}`;\r\n};","import { Button, TextField } from \"@material-ui/core\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AppContext } from \"../App\";\r\nimport { authFetch } from \"../services/AuthProvider\";\r\n\r\nfunction AddComment({ postId, comments, setComments, postData, setPostData }) {\r\n  let context = useContext(AppContext);\r\n\r\n  let history = useHistory();\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const [isError, setError] = useState(false);\r\n\r\n  const addComment = () => {\r\n    if (text === \"\") {\r\n      setError(true);\r\n      return;\r\n    }\r\n    authFetch(`${window.location.origin}/comments`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        postId: postId,\r\n        text: text,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          //todo add redirect\r\n          setComments({\r\n            commentList: [],\r\n            pageNumber: 0,\r\n            totalPages: 0,\r\n            hasNext: false,\r\n          });\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        if(body.result === false){\r\n          return;\r\n        }\r\n        setComments({\r\n          commentList: [body, ...comments.commentList],\r\n          pageNumber: comments.nextPage,\r\n          totalPages: comments.totalPages,\r\n          hasNext: comments.hasNext,\r\n        });\r\n        let newPost = { ...postData.post };\r\n        newPost.postStatistics.commentCount =\r\n          newPost.postStatistics.commentCount + 1;\r\n        setPostData({\r\n          post: newPost,\r\n          isVote: postData.isVote,\r\n          voteValue: postData.voteValue,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(typeof err);\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const onTextChange = (event) => {\r\n    setError(false);\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <TextField\r\n          helperText={isError ? \"Comment can't be empty\" : \"\"}\r\n          error={isError}\r\n          onChange={onTextChange}\r\n          multiline\r\n          rowsMax={5}\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{ marginTop: \"1rem\", marginBottom: \"1rem\", textAlign: \"center\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"primary\" onClick={addComment}>\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddComment;\r\n","import ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\n\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { authFetch, useAuth } from \"../services/AuthProvider\";\r\nimport Comment from \"./Comment\";\r\nimport { Avatar, CircularProgress, IconButton } from \"@material-ui/core\";\r\nimport { formatDate } from \"../services/utils\";\r\nimport AddComment from \"./AddComment\";\r\nimport { AppContext } from \"../App\";\r\n\r\nfunction Post() {\r\n  let context = useContext(AppContext);\r\n\r\n  let { id } = useParams();\r\n\r\n  let [isAuth] = useAuth();\r\n\r\n  let history = useHistory();\r\n\r\n  const [postData, setPostData] = useState({\r\n    post: {\r\n      postStatistics: {},\r\n      user: { firstName: \"\", lastName: \"\" },\r\n    },\r\n  });\r\n\r\n  const [comments, setComments] = useState({\r\n    commentList: [],\r\n    pageNumber: -1,\r\n    totalPages: 2,\r\n    hasNext: true,\r\n  });\r\n\r\n  let voteStyle = (value) => {\r\n    if (isAuth) {\r\n      if (postData.isVote === true) {\r\n        if (value) {\r\n          return postData.voteValue\r\n            ? {\r\n                cursor: \"not-allowed\",\r\n                pointerEvents: \"none\",\r\n                color: \"rgb(15,148,15)\",\r\n              }\r\n            : {};\r\n        } else {\r\n          return postData.voteValue\r\n            ? {}\r\n            : {\r\n                cursor: \"not-allowed\",\r\n                pointerEvents: \"none\",\r\n                color: \"rgb(15,148,15)\",\r\n              };\r\n        }\r\n      } else {\r\n        return {};\r\n      }\r\n    } else {\r\n      return {\r\n        cursor: \"not-allowed\",\r\n        pointerEvents: \"none\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const fetchPost = () => {\r\n    let url = new URL(`${window.location.origin}/posts/${id}`);\r\n    authFetch(url)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          //todo add redirect\r\n          setPostData({});\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((result) => setPostData(result))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const fetchComments = () => {\r\n    let nextPage = comments.pageNumber + 1;\r\n    let hasNext = !(nextPage === comments.totalPages);\r\n    let url = new URL(`${window.location.origin}/comments`);\r\n    let params = {\r\n      pageNumber: nextPage,\r\n      pageSize: 12,\r\n      sort: \"id\",\r\n      postId: id,\r\n    };\r\n    Object.keys(params).forEach((key) =>\r\n      url.searchParams.append(key, params[key])\r\n    );\r\n    authFetch(url)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          //todo add redirect\r\n          return {\r\n            commentList: [],\r\n            pageNumber: 0,\r\n            totalPages: 0,\r\n            hasNext: false,\r\n          };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        setComments({\r\n          commentList: [...comments.commentList, ...body.commentList],\r\n          pageNumber: nextPage,\r\n          totalPages: body.totalPages,\r\n          hasNext: hasNext,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const onLike = () => {\r\n    authFetch(`${window.location.origin}/votes`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        postId: postData.post.id,\r\n        value: true,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          //todo add redirect\r\n          return { result: false };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        if (body.result === true) {\r\n          let newPost = { ...postData.post };\r\n          newPost.postStatistics.likeCount =\r\n            newPost.postStatistics.likeCount + 1;\r\n          newPost.postStatistics.dislikeCount =\r\n            newPost.postStatistics.dislikeCount - 1;\r\n          setPostData({\r\n            post: newPost,\r\n            isVote: true,\r\n            voteValue: true,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const onDislike = () => {\r\n    authFetch(`${window.location.origin}/votes`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        postId: postData.post.id,\r\n        value: false,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          //todo add redirect\r\n          return { result: false };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        if (body.result === true) {\r\n          let newPost = { ...postData.post };\r\n          newPost.postStatistics.likeCount =\r\n            newPost.postStatistics.likeCount - 1;\r\n          newPost.postStatistics.dislikeCount =\r\n            newPost.postStatistics.dislikeCount + 1;\r\n          setPostData({\r\n            post: newPost,\r\n            isVote: true,\r\n            voteValue: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => fetchPost(), []);\r\n  useEffect(() => fetchComments(), []);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"comment-c\" style={{ height: \"100vh\", overflowY: \"auto\" }}>\r\n        <InfiniteScroll\r\n          dataLength={comments.commentList.length}\r\n          next={fetchComments}\r\n          hasMore={comments.hasNext}\r\n          loader={<CircularProgress />}\r\n          endMessage={\r\n            <div style={{ width: \"100%\" }}>\r\n              <span>No moaaar!!</span>\r\n            </div>\r\n          }\r\n          scrollableTarget=\"comment-c\"\r\n          style={{ margin: \"1rem\" }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div style={{ marginRight: \"0.25rem\" }}>\r\n              <Avatar src={postData.post.avatarUrl} />\r\n            </div>\r\n            <div\r\n              style={{ marginRight: \"0.25rem\" }}\r\n            >{`${postData.post.user.firstName} ${postData.post.user.lastName}`}</div>\r\n            <div style={{ marginRight: \"0.25rem\" }}>\r\n              <div>{formatDate(postData.post.publicationTime)}</div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h1>{postData.post.title}</h1>\r\n          </div>\r\n          <div\r\n            style={{ marginBottom: \"1rem\" }}\r\n            dangerouslySetInnerHTML={{ __html: postData.post.text }}\r\n          ></div>\r\n          <div>\r\n            <div\r\n              style={{ display: \"flex\", flexDirection: \"row\", margin: \"1rem\" }}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  marginRight: \"0.5rem\",\r\n                }}\r\n              >\r\n                <div style={{ marginRight: \"0.25rem\" }}>\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    onClick={onLike}\r\n                    style={voteStyle(true)}\r\n                  >\r\n                    <ThumbUpIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div style={{ paddingBottom: 12, paddingTop: 12 }}>\r\n                  {postData.post.postStatistics.likeCount}\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  marginRight: \"0.5rem\",\r\n                }}\r\n              >\r\n                <div style={{ marginRight: \"0.25rem\" }}>\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    onClick={onDislike}\r\n                    style={voteStyle(false)}\r\n                  >\r\n                    <ThumbDownIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div style={{ paddingBottom: 12, paddingTop: 12 }}>\r\n                  {postData.post.postStatistics.dislikeCount}\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  marginRight: \"0.5rem\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    marginRight: \"0.25rem\",\r\n                    paddingBottom: 12,\r\n                    paddingTop: 12,\r\n                  }}\r\n                >\r\n                  <VisibilityIcon />\r\n                </div>\r\n                <div style={{ paddingBottom: 12, paddingTop: 12 }}>\r\n                  {postData.post.postStatistics.viewCount}\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  marginRight: \"0.5rem\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    marginRight: \"0.25rem\",\r\n                    paddingBottom: 12,\r\n                    paddingTop: 12,\r\n                  }}\r\n                >\r\n                  <ChatBubbleOutlineIcon />\r\n                </div>\r\n                <div style={{ paddingBottom: 12, paddingTop: 12 }}>\r\n                  {postData.post.postStatistics.commentCount}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div>\r\n            <h2>Comments</h2>\r\n          </div>\r\n          {isAuth ? (\r\n            <div>\r\n              <AddComment\r\n                postId={postData.post.id}\r\n                comments={comments}\r\n                setComments={setComments}\r\n                postData={postData}\r\n                setPostData={setPostData}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h4>Comments allowed only for registered users</h4>\r\n            </div>\r\n          )}\r\n          {comments.commentList.length > 0 ? (\r\n            comments.commentList.map((comment) => (\r\n              <Comment key={comment.id} comment={comment} isAuth={isAuth} />\r\n            ))\r\n          ) : (\r\n            <div>There is no comments</div>\r\n          )}\r\n        </InfiniteScroll>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { forwardRef, useContext, useRef, useState } from \"react\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Input\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\r\n\r\nimport { authFetch } from \"../services/AuthProvider\";\r\nimport {\r\n  Checkbox,\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  Radio,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { useHistory } from \"react-router\";\r\nimport { formatDate } from \"../services/utils\";\r\nimport { AppContext } from \"../App\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nfunction UserPostList() {\r\n  let history = useHistory();\r\n\r\n  let tableRef = useRef();\r\n\r\n  let context = useContext(AppContext);\r\n\r\n  const status = {\r\n    moderated: \"MODERATED\",\r\n    published: \"PUBLISHED\",\r\n    declined: \"DECLINED\",\r\n    inactive: \"INACTIVE\",\r\n    future: \"FUTURE\",\r\n    all: \"ALL\",\r\n  };\r\n\r\n  const [state, setState] = useState(status.published);\r\n\r\n  const [isConfirmOpen, setConfirmOpen] = useState({\r\n    isOpen: false,\r\n    id: null,\r\n  });\r\n\r\n  // const [post, setPost] = useState({});\r\n\r\n  const closeConfirm = () => {\r\n    setConfirmOpen(false);\r\n  };\r\n\r\n  const statusChangeHandler = (event) => {\r\n    setState(event.target.value);\r\n    tableRef.current.onQueryChange();\r\n  };\r\n\r\n  const onDelete = () => {\r\n    let id = isConfirmOpen.id;\r\n    setConfirmOpen({ isOpen: false, id: null });\r\n    authFetch(`${window.location.origin}/posts/${id}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          return { result: false };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        if (body.result === true) {\r\n          tableRef.current.onQueryChange();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const moveToPostPage = (id) => {\r\n    history.push(\"/post/view/\" + id);\r\n  };\r\n\r\n  const moveToEditPage = (id) => {\r\n    history.push(\"/post/edit/\" + id);\r\n  };\r\n\r\n  const moveToNewPost = () => {\r\n    history.push(\"/post/new\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Popup open={isConfirmOpen.isOpen} onClose={closeConfirm}>\r\n        <div className=\"modal\">\r\n          <div className=\"modal-main\" style={{ width: 300 }}>\r\n            <div style={{ margin: \"2rem\" }}>\r\n              <div style={{ marginBottom: \"2rem\" }}>\r\n                <h2 style={{ textAlign: \"center\" }}>\r\n                  The post will be permanently deleted!\r\n                </h2>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-around\",\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => onDelete()}\r\n                >\r\n                  Confirm\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"default\"\r\n                  onClick={() => setConfirmOpen({ isOpen: false, id: null })}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n      <MaterialTable\r\n        tableRef={tableRef}\r\n        style={{ boxShadow: \"none\" }}\r\n        columns={[\r\n          {\r\n            title: \"Header\",\r\n            field: \"postCardImageUrl\",\r\n            render: (rowData) => (\r\n              <img\r\n                style={{ width: \"100%\", borderRadius: 15 }}\r\n                src={rowData.postCardImageUrl}\r\n              />\r\n            ),\r\n            width: null,\r\n            cellStyle: { width: \"10%\" },\r\n            editable: \"never\",\r\n          },\r\n          {\r\n            title: \"Active\",\r\n            field: \"isActive\",\r\n            render: (rowData) => (\r\n              <Checkbox color=\"primary\" checked={rowData.isActive} />\r\n            ),\r\n            width: null,\r\n            cellStyle: { width: \"5%\" },\r\n            editComponent: (props) => (\r\n              <div>\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  checked={props.rowData.isActive}\r\n                  onChange={(e) => props.onChange(e.target.checked)}\r\n                />\r\n              </div>\r\n            ),\r\n          },\r\n          {\r\n            title: \"Publication time\",\r\n            field: \"publicationTime\",\r\n            width: null,\r\n            cellStyle: { width: \"25%\" },\r\n            render: (rowData) => formatDate(rowData.publicationTime),\r\n            editComponent: (props) => (\r\n              <div>\r\n                <TextField\r\n                  type=\"datetime-local\"\r\n                  value={props.rowData.publicationTime}\r\n                  onChange={(e) => props.onChange(e.target.value)}\r\n                />\r\n              </div>\r\n            ),\r\n          },\r\n          {\r\n            title: \"Title\",\r\n            field: \"title\",\r\n            width: null,\r\n            cellStyle: { width: \"60%\" },\r\n            editable: \"never\",\r\n          },\r\n        ]}\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <MTableToolbar {...props} />\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <RadioGroup\r\n                  style={{ flexDirection: \"row\" }}\r\n                  aria-label=\"Post status\"\r\n                  value={state}\r\n                  onChange={statusChangeHandler}\r\n                  // color=\"primary\"\r\n                >\r\n                  <FormControlLabel\r\n                    labelPlacement=\"top\"\r\n                    value={status.published}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Published\"\r\n                  />\r\n                  <FormControlLabel\r\n                    labelPlacement=\"top\"\r\n                    value={status.moderated}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Moderated\"\r\n                  />\r\n                  <FormControlLabel\r\n                    labelPlacement=\"top\"\r\n                    value={status.declined}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Declined\"\r\n                  />\r\n                  <FormControlLabel\r\n                    labelPlacement=\"top\"\r\n                    value={status.inactive}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Inactive\"\r\n                  />\r\n                  <FormControlLabel\r\n                    labelPlacement=\"top\"\r\n                    value={status.future}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Future\"\r\n                  />\r\n                  <FormControlLabel\r\n                    labelPlacement=\"top\"\r\n                    value={status.all}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"All\"\r\n                  />\r\n                </RadioGroup>\r\n                <div>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={moveToNewPost}\r\n                  >\r\n                    New post\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n        data={(query) =>\r\n          new Promise((resolve, reject) => {\r\n            let url = new URL(window.location.origin + \"/posts/user\");\r\n            let params = {\r\n              pageNumber: query.page,\r\n              pageSize: query.pageSize,\r\n              status: state,\r\n              sort: \"id\",\r\n            };\r\n            Object.keys(params).forEach((key) =>\r\n              url.searchParams.append(key, params[key])\r\n            );\r\n            authFetch(url)\r\n              .then((response) => {\r\n                if (response.ok) {\r\n                  return response.json();\r\n                } else if (response.status === 403) {\r\n                  context.showAuth(true);\r\n                  //reload page ?\r\n                  history.push(\"/\");\r\n                  return {\r\n                    postByUserList: [],\r\n                    page: 0,\r\n                    totalElements: 0,\r\n                  };\r\n                } else {\r\n                  throw new Error(\"Error code: \" + response.status);\r\n                }\r\n              })\r\n              .then((result) => {\r\n                resolve({\r\n                  data: result.postByUserList,\r\n                  page: result.page,\r\n                  totalCount: result.totalElements,\r\n                });\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n                history.push(\"/error\");\r\n              });\r\n          })\r\n        }\r\n        editable={{\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              let url = `${window.location.origin}/posts/${newData.id}`;\r\n\r\n              authFetch(url, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json;charset=utf-8\",\r\n                },\r\n                body: JSON.stringify({\r\n                  title: null,\r\n                  text: null,\r\n                  publicationTime: newData.publicationTime,\r\n                  isActive: newData.isActive,\r\n                  postCardImageUrl: null,\r\n                }),\r\n              }).then((response) => {\r\n                if (response.ok) {\r\n                  resolve();\r\n                } else if (response.status === 403) {\r\n                  context.showAuth();\r\n                  //reload page ?\r\n                  history.push(\"/\");\r\n                } else {\r\n                  throw new Error(\"Error code: \" + response.status);\r\n                }\r\n              });\r\n            }).catch((err) => {\r\n              console.log(err);\r\n              history.push(\"/error\");\r\n            }),\r\n        }}\r\n        actions={[\r\n          {\r\n            icon: () => <DeleteOutline color=\"primary\" />,\r\n            tooltip: \"Delete post\",\r\n            onClick: (event, rowData) =>\r\n              setConfirmOpen({ isOpen: true, id: rowData.id }),\r\n          },\r\n          {\r\n            icon: () => <EditIcon />,\r\n            tooltip: \"Edit page\",\r\n            onClick: (event, rowData) => moveToEditPage(rowData.id),\r\n          },\r\n          {\r\n            icon: () => <OpenInNewIcon />,\r\n            tooltip: \"View\",\r\n            onClick: (event, rowData) => moveToPostPage(rowData.id),\r\n          },\r\n        ]}\r\n        icons={tableIcons}\r\n        title=\"All posts list\"\r\n        options={{\r\n          actionsColumnIndex: 5,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserPostList;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { authFetch } from \"../services/AuthProvider\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { AppContext } from \"../App\";\r\n\r\nlet quillObject;\r\n\r\nconst imageHandler = () => {\r\n  const input = document.createElement(\"input\");\r\n\r\n  input.setAttribute(\"type\", \"file\");\r\n  input.setAttribute(\"accept\", \"image/*\");\r\n  input.click();\r\n\r\n  input.onchange = async () => {\r\n    const file = input.files[0];\r\n    //check file !==null?\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    const res = await uploadFile(formData);\r\n  };\r\n};\r\n\r\nconst uploadFile = async (formData) => {\r\n  let url = new URL(window.location.origin + \"/images/upload\");\r\n  authFetch(url, { method: \"POST\", body: formData })\r\n  .then((response) => {\r\n    if (response.ok) {\r\n      response.json().then((body) => {\r\n        let url = body.url;\r\n        const range = quillObject.getEditorSelection();\r\n        quillObject.getEditor().insertEmbed(range.index, \"image\", url);\r\n      });\r\n    } else {\r\n      console.log(\"!!!\");\r\n    }\r\n  });\r\n};\r\n\r\nconst modules = {\r\n  toolbar: {\r\n    container: [\r\n      [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\r\n      [{ size: [] }],\r\n      [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n      [\r\n        { list: \"ordered\" },\r\n        { list: \"bullet\" },\r\n        { indent: \"-1\" },\r\n        { indent: \"+1\" },\r\n        { align: [] },\r\n      ],\r\n      [\"link\", \"image\", \"video\"],\r\n      [\"clean\"],\r\n    ],\r\n    handlers: {\r\n      image: imageHandler,\r\n    },\r\n  },\r\n  clipboard: {\r\n    // toggle to add extra line breaks when pasting HTML:\r\n    matchVisual: false,\r\n  },\r\n};\r\n\r\nfunction EditPost({ postId, isEdit, isNew }) {\r\n  let context = useContext(AppContext);\r\n\r\n  let { pathId } = useParams();\r\n\r\n  let id = postId === undefined ? pathId : postId;\r\n\r\n  let params = {\r\n    title: \"\",\r\n    isActive: false,\r\n    publicationTime: new Date(),\r\n    postCardImageUrl: \"\",\r\n    text: \"\",\r\n  };\r\n\r\n  const setUp = () => {\r\n    if (isEdit) {\r\n      authFetch(`${window.location.origin}/posts/user/${id}`)\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            return response.json();\r\n          } else if (response.status === 403) {\r\n            context.showAuth(true);\r\n            history.push(\"/\");\r\n            //todo add redirect\r\n          } else {\r\n            throw new Error(\"Error code: \" + response.status);\r\n          }\r\n        })\r\n        .then((result) => {\r\n          setState(result.text);\r\n          setHeaderImageUrl(result.postCardImageUrl);\r\n          setPostData({\r\n            title: result.title,\r\n            isActive: result.isActive,\r\n          });\r\n          setPubDatetime(result.publicationTime);\r\n        }).catch(err =>{\r\n          console.log(err);\r\n          history.push(\"/error\");\r\n        });\r\n    }\r\n    if (isNew) {\r\n      setState(params.text);\r\n      setHeaderImageUrl(params.postCardImageUrl);\r\n      setPostData({\r\n        title: params.title,\r\n        isActive: params.isActive,\r\n      });\r\n      setPubDatetime(params.publicationTime);\r\n    }\r\n  };\r\n\r\n  let history = useHistory();\r\n\r\n  const [state, setState] = useState(params.text);\r\n\r\n  const [postData, setPostData] = useState({\r\n    title: params.title,\r\n    isActive: params.isActive,\r\n  });\r\n\r\n  const [pubDatetime, setPubDatetime] = useState(params.publicationTime); /////\r\n\r\n  const [headerImageUrl, setHeaderImageUrl] = useState(params.postCardImageUrl);\r\n\r\n  const onTitleChange = (event) => {\r\n    setPostData({ ...postData, title: event.target.value });\r\n  };\r\n\r\n  const onIsActiveChange = (event) => {\r\n    setPostData({ ...postData, isActive: event.target.checked });\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    setState(value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    let url = isEdit\r\n      ? `${window.location.origin}/posts/${id}`\r\n      : `${window.location.origin}/posts`;\r\n    let method = isEdit ? \"PUT\" : \"POST\";\r\n\r\n    authFetch(url, {\r\n      method: method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        title: postData.title,\r\n        text: state,\r\n        publicationTime: pubDatetime,\r\n        isActive: postData.isActive,\r\n        postCardImageUrl: headerImageUrl,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          return { result: false };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        if (body.result === true) {\r\n          history.push(\"/post/user\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const onHeaderImageChange = (event) => {\r\n    const formData = new FormData();\r\n    formData.append(\"xScale\", 5);\r\n    formData.append(\"yScale\", 3);\r\n    formData.append(\"image\", event.target.files[0]);\r\n    let url = new URL(window.location.origin + \"/images/header/upload\");\r\n    authFetch(url, { method: \"POST\", body: formData })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          return { url: \"\" };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        let url = body.url;\r\n        setHeaderImageUrl(url);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => setUp(), [id]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <div style={{ textAlign: \"center\" }}>\r\n            {isEdit ? <h3>Update post</h3> : <h3>Create new post</h3>}\r\n          </div>\r\n          <hr />\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <div\r\n            style={{\r\n              width: \"50%\",\r\n              margin: \"0.5rem\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <div style={{ margin: \"0.5rem\" }}>\r\n              <div>Title</div>\r\n              <textarea\r\n                name=\"title\"\r\n                style={{ width: \"100%\", resize: \"none\" }}\r\n                rows=\"5\"\r\n                value={postData.title}\r\n                onChange={onTitleChange}\r\n              ></textarea>\r\n            </div>\r\n            <div style={{ margin: \"0.5rem\" }}>\r\n              <div>Publication time</div>\r\n              <DateTimePicker\r\n                onChange={setPubDatetime}\r\n                value={new Date(pubDatetime)}\r\n              />\r\n            </div>\r\n            <div style={{ margin: \"0.5rem\" }}>\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"isActive\"\r\n                checked={postData.isActive}\r\n                onChange={onIsActiveChange}\r\n              />\r\n              <span>Is this post will be active?</span>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"space-between\",\r\n              width: \"50%\",\r\n              margin: \"0.5rem\",\r\n            }}\r\n          >\r\n            <div style={{ margin: \"0.5rem\" }}>\r\n              Header image<span>(will be centered and clipped to 5x3)</span>\r\n            </div>\r\n            <div>\r\n              <img\r\n                src={headerImageUrl}\r\n                style={{ width: \"100%\", borderRadius: 15 }}\r\n              />\r\n              <div style={{ margin: \"0.5rem\" }}>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"/image*\"\r\n                  onChange={onHeaderImageChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <ReactQuill\r\n          ref={(el) => (quillObject = el)}\r\n          value={state}\r\n          modules={modules}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{ margin: \"1rem\", display: \"flex\", justifyContent: \"center\" }}\r\n      >\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditPost;\r\n","function NotFound() {\r\n  return <h1>Page not found</h1>\r\n}\r\n\r\nexport default NotFound;\r\n","import CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport { Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { useContext, useState } from \"react\";\r\nimport { AppContext } from \"../App\";\r\nimport \"../css/login.css\";\r\nimport { login } from \"../services/AuthProvider\";\r\n\r\nfunction Login({ show, handleClose }) {\r\n\r\n  let context = useContext(AppContext);\r\n\r\n  const loginClassName =\r\n    show === true ? \"modal display-block\" : \"modal display-none\";\r\n\r\n  const [credentials, setCredentials] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [isError, setError] = useState(false);\r\n\r\n  const onChange = ({ target: { name, value } }) => {\r\n    setCredentials({ ...credentials, [name]: value });\r\n    setError(false)\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    fetch(\"/login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(credentials),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          let authToken =  response.headers.get(\"Authorization\");\r\n          let refreshToken = response.headers.get(\"Refresh\");\r\n          if (authToken === null || refreshToken === null){\r\n            throw new Error();\r\n          }\r\n          return {\r\n            accessToken: authToken,\r\n            refreshToken: refreshToken,\r\n          };\r\n        } else {\r\n          throw new Error();\r\n        }\r\n      })\r\n      .then((token) => {\r\n        login(token);\r\n        setCredentials({\r\n          username: \"\",\r\n          password: \"\",\r\n        });\r\n        context.showAuth(false);\r\n        context.avatar.fetch(!context.avatar.trigger);\r\n        console.log(context);\r\n      })\r\n      .catch((err) => setError(true));\r\n  };\r\n\r\n  return (\r\n    <div className={loginClassName}>\r\n      <div className=\"modal-main\">\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            position: \"absolute\",\r\n            right: 0,\r\n            top: 0,\r\n          }}\r\n        >\r\n          <IconButton onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <form onSubmit={onSubmit}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              margin: \"1rem\",\r\n            }}\r\n          >\r\n            <h2 style={{ textAlign: \"center\" }}>Please sign in</h2>\r\n            <div style={{ marginBottom: \"0.5rem\" }}>\r\n              <TextField\r\n                error={isError}\r\n                variant=\"outlined\"\r\n                name=\"username\"\r\n                value={credentials.username}\r\n                label=\"Email\"\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n            <div style={{ marginBottom: \"0.5rem\" }}>\r\n              <TextField\r\n                error={isError}\r\n                helperText={\r\n                  isError ? \"incorrect email or password\" : \"\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                value={credentials.password}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n            <div style={{ marginBottom: \"0.5rem\" }}>\r\n              <Button type=\"submit\" variant=\"contained\">\r\n                Sign in\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { Avatar, Button, TextField, Typography } from \"@material-ui/core\";\r\nimport { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AppContext } from \"../App\";\r\nimport { authFetch, getUserId, useAuth } from \"../services/AuthProvider\";\r\n\r\nfunction UserProfile() {\r\n  let context = useContext(AppContext);\r\n\r\n  let history = useHistory();\r\n\r\n  let [isAuth] = useAuth();\r\n\r\n  let userId = getUserId();\r\n\r\n  const [userData, setUserData] = useState({\r\n    role: {\r\n      name: \"\",\r\n    },\r\n  });\r\n\r\n  const [isEdit, setReadOnly] = useState({\r\n    readOnly: true,\r\n  });\r\n\r\n  const [isEditOpen, setEditOpen] = useState(false);\r\n\r\n  const fetchUserData = () => {\r\n    if (!isAuth) return;\r\n    authFetch(`${window.location.origin}/users/${userId}`)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          return { result: {} };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        console.log(body);\r\n        setUserData(body);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    let url = URL.createObjectURL(acceptedFiles[0]);\r\n    setUserData({ ...userData, avatarUrl: url });\r\n    // Do something with the files\r\n    // console.log(acceptedFiles);\r\n    // const formData = new FormData();\r\n    // formData.append(\"image\", acceptedFiles[0]);\r\n    // formData.append(\"xScale\", 1);\r\n    // formData.append(\"yScale\", 1);\r\n    // let url = new URL(window.location.origin + \"/images/header/upload\");\r\n    // authFetch(url, { method: \"POST\", body: formData })\r\n    //   .then((response) => {\r\n    //     if (response.ok) {\r\n    //       return response.json();\r\n    //     } else if (response.status === 403) {\r\n    //       context.showAuth(true);\r\n    //       history.push(\"/\");\r\n    //       return { url: \"\" };\r\n    //     } else {\r\n    //       throw new Error(\"Error code: \" + response.status);\r\n    //     }\r\n    //   })\r\n    //   .then((result) => {\r\n    //     let url = result.url;\r\n    //     setUserData({ ...userData, avatarUrl: url });\r\n    //     saveUser();\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //     history.push(\"/error\");\r\n    //   });\r\n  }, []);\r\n\r\n  const saveUser = () => {\r\n    authFetch(`${window.location.origin}/users/${userId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        firstName: userData.firstName,\r\n        lastName: userData.lastName,\r\n        email: userData.email,\r\n        avatarUrl: userData.avatarUrl,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          return { result: false };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result === true) {\r\n          history.push(\"/post/user\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const onOpenEdit = () => {\r\n    setEditOpen(!isEditOpen);\r\n    setReadOnly({ readOnly: !isEdit.readOnly });\r\n  };\r\n\r\n  const { getRootProps, getInputProps, isDragActive, isDragReject } =\r\n    useDropzone({\r\n      onDrop,\r\n      accept: [\"image/jpeg\", \"image/png\"],\r\n      minSize: 0,\r\n      multiple: false,\r\n    });\r\n\r\n  const getMessage = () => {\r\n    if (isDragReject) {\r\n      return (\r\n        <div style={{ color: \"red\", margin: \"0.5rem\" }}>\r\n          Files not supported\r\n        </div>\r\n      );\r\n    } else if (isDragActive) {\r\n      return (\r\n        <div style={{ color: \"black\", margin: \"0.5rem\" }}>\r\n          Drop the files here ...\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ color: \"black\", margin: \"0.5rem\" }}>\r\n          Drag 'n' drop image here, or click to select\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => fetchUserData(), []);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            width: 200,\r\n            justifyContent: \"center\",\r\n            marginRight: \"2rem\",\r\n          }}\r\n        >\r\n          <div>\r\n            <div>\r\n              <img\r\n                style={{\r\n                  width: \"100%\",\r\n                  border: \"solid\",\r\n                  borderWidth: 1,\r\n                  borderRadius: 15,\r\n                  color: \"rgb(200,200,200)\",\r\n                }}\r\n                src={userData.avatarUrl}\r\n              />\r\n            </div>\r\n            {isEditOpen ? (\r\n              <div\r\n                {...getRootProps()}\r\n                style={{\r\n                  background: \"rgb(230,230,230)\",\r\n                  border: \"dotted\",\r\n                  color: \"rgb(170,170,170)\",\r\n                }}\r\n              >\r\n                <input {...getInputProps()} />\r\n                <div\r\n                  style={{\r\n                    height: 60,\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  {getMessage()}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div style={{ margin: \"1rem\" }}>\r\n            <TextField\r\n              value={userData.firstName}\r\n              inputProps={isEdit}\r\n              style={{ width: \"100%\" }}\r\n              helperText=\"First name\"\r\n            />\r\n          </div>\r\n          <div style={{ margin: \"1rem\" }}>\r\n            <TextField\r\n              value={userData.lastName}\r\n              defaultValue={userData.lastName}\r\n              inputProps={isEdit}\r\n              style={{ width: \"100%\" }}\r\n              helperText=\"Last name\"\r\n            />\r\n          </div>\r\n          <div style={{ margin: \"1rem\" }}>\r\n            <TextField\r\n              value={userData.email}\r\n              helperText=\"Email\"\r\n              inputProps={isEdit}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </div>\r\n          <div style={{ margin: \"1rem\" }}>\r\n            <TextField\r\n              value={userData.registrationDate}\r\n              type=\"datetime-local\"\r\n              helperText=\"Registration date\"\r\n              inputProps={isEdit}\r\n            />\r\n          </div>\r\n          <div style={{ margin: \"1rem\" }}>\r\n            <TextField\r\n              value={userData.role.name}\r\n              helperText=\"Permission\"\r\n              inputProps={isEdit}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <div style={{ marginRight: \"2rem\" }}>\r\n          <Button variant=\"outlined\" onClick={onOpenEdit}>\r\n            edit\r\n          </Button>\r\n        </div>\r\n        {isEditOpen ? (\r\n          <div>\r\n            <Button variant=\"outlined\" color=\"primary\">\r\n              save\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n","import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport PostList from \"./components/PostList\";\nimport Footer from \"./components/Footer\";\nimport Post from \"./components/Post\";\nimport UserPostList from \"./components/UserPostList\";\nimport EditPost from \"./components/EditPost\";\nimport { useAuth } from \"./services/AuthProvider\";\nimport NotFound from \"./components/NotFound\";\nimport Login from \"./components/Login\";\nimport UserProfile from \"./components/UserProfile\";\n\nexport const AppContext = React.createContext();\n\nfunction App() {\n  let [isAuth] = useAuth();\n\n  const [showAuth, setShowAuth] = useState(false);\n\n  return (\n    <AppContext.Provider\n      value={{ showAuth: setShowAuth, avatar: { trigger: false, fetch: null } }}\n    >\n      <Router>\n        <Login show={showAuth} handleClose={setShowAuth} />\n        <Header />\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexGrow: 1,\n            flexShrink: 1,\n            flexBasis: \"auto\",\n          }}\n        >\n          <div style={{}}></div>\n          <div style={{ width: \"50%\" }}>\n            <Switch>\n              <Route exact path=\"/\">\n                <PostList />\n              </Route>\n              <Route path=\"/post/view/:id\">\n                <Post />\n              </Route>\n              <Route path=\"/post/edit/:pathId\">\n                {() => {\n                  if (isAuth) {\n                    return <EditPost isEdit={true} />;\n                  } else {\n                    setShowAuth(true);\n                    return <Redirect to=\"/\" />;\n                  }\n                }}\n              </Route>\n              <Route path=\"/post/new\">\n                {() => {\n                  if (isAuth) {\n                    return <EditPost isNew={true} />;\n                  } else {\n                    setShowAuth(true);\n                    return <Redirect to=\"/\" />;\n                  }\n                }}\n              </Route>\n              <Route path=\"/post/user\">\n                {() => {\n                  if (isAuth) {\n                    return <UserPostList />;\n                  } else {\n                    setShowAuth(true);\n                    return <Redirect to=\"/\" />;\n                  }\n                }}\n              </Route>\n              <Route path=\"/profile\">\n                {() => {\n                  if (isAuth) {\n                    return <UserProfile />;\n                  } else {\n                    setShowAuth(true);\n                    return <Redirect to=\"/\" />;\n                  }\n                }}\n              </Route>\n              <Route path=\"/error\">\n                <h1>Error</h1>\n              </Route>\n              <NotFound />\n            </Switch>\n          </div>\n          <div></div>\n        </div>\n      </Router>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}