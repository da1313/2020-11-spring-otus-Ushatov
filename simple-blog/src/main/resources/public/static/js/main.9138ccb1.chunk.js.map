{"version":3,"sources":["services/AuthProvider.ts","svg/cat.svg","components/Header.jsx","components/PostStatistics.jsx","components/PostCard.jsx","services/AuthProvider____.ts","components/PostList.jsx","components/Footer.jsx","components/Comment.jsx","services/utils.js","components/AddComment.jsx","components/Post.jsx","components/UserPostList.jsx","components/EditPost.jsx","components/NotFound.jsx","components/Login.jsx","components/UserProfile.jsx","components/Registration.jsx","components/UserActivate.jsx","components/LeftMenu.jsx","App.js","index.js"],"names":["createTokenProvider","_token","JSON","parse","localStorage","getItem","e","loadFromStorage","extractUserId","split","accessToken","length","atob","sub","isLoggedIn","getExpirationDate","token","jwt","exp","Number","isFinite","observers","setToken","setItem","stringify","removeItem","isLogged","forEach","o","notify","getToken","a","Date","now","fetch","method","body","refreshToken","then","r","json","catch","updateToken","subscribe","observer","push","unsubscribe","filter","getUserId","tokenProvider","useAuth","useState","setLogged","useEffect","listener","newIsLogged","authFetch","input","init","headers","Authorization","login","newToken","logout","createAuthProvider","Header","context","useContext","AppContext","history","useHistory","isAuth","tr","setTr","userAvaUrl","setUserAvaUrl","avatar","trigger","window","location","origin","response","ok","status","showAuth","url","Error","err","console","log","style","display","flexDirection","justifyContent","flexGrow","flexShrink","flexBasis","alignItems","className","width","marginRight","onClick","src","CatSvg","Avatar","on","position","closeOnDocumentClick","mouseEnterDelay","borderBottom","cursor","fontSize","PostStatistics","post","margin","postStatistics","likeCount","dislikeCount","d","toLocaleDateString","month","date","year","formatDate","publicationTime","viewCount","commentCount","PostCard","border","borderWidth","borderRadius","borderColor","id","postCardImageUrl","marginLeft","fontWeight","title","_userId","userId","auth","newAuth","PostList","postList","pageNumber","totalPages","hasNext","posts","setPosts","field","direction","sort","setSort","fetchPosts","nextPage","URL","params","pageSize","Object","keys","key","searchParams","append","postCartDataList","fetchSorted","Button","height","overflowY","dataLength","next","hasMore","loader","CircularProgress","endMessage","scrollableTarget","flexWrap","map","Footer","Comment","comment","pointerEvents","text","commentText","setCommentText","isShow","error","edit","setEdit","marginTop","user","avatarUrl","firstName","lastName","isEnabled","IconButton","color","paddingBottom","paddingTop","likes","dislikes","alignSelf","variant","postId","result","TextField","onChange","target","value","helperText","multiline","rowsMax","marginBottom","AddComment","comments","setComments","postData","setPostData","setText","isError","setError","event","textAlign","commentList","newPost","isVote","voteValue","Post","useParams","voteStyle","fetchComments","fetchPost","dangerouslySetInnerHTML","__html","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","UserPostList","quillObject","tableRef","useRef","state","setState","isOpen","isConfirmOpen","setConfirmOpen","statusChangeHandler","current","onQueryChange","moveToNewPost","open","onClose","onDelete","boxShadow","columns","render","rowData","cellStyle","editable","Checkbox","checked","isActive","editComponent","type","components","Toolbar","RadioGroup","aria-label","FormControlLabel","labelPlacement","control","Radio","label","data","query","Promise","resolve","reject","page","postByUserList","totalElements","totalCount","onRowUpdate","newData","oldData","actions","icon","tooltip","icons","options","actionsColumnIndex","uploadFile","formData","range","getEditorSelection","getEditor","insertEmbed","index","modules","toolbar","container","header","font","size","list","indent","align","handlers","image","document","createElement","setAttribute","click","onchange","file","files","FormData","clipboard","matchVisual","EditPost","isEdit","isNew","pathId","undefined","pubDatetime","setPubDatetime","headerImageUrl","setHeaderImageUrl","name","resize","rows","accept","el","NotFound","Login","show","handleClose","loginClassName","username","password","credentials","setCredentials","right","top","onSubmit","preventDefault","authToken","get","UserProfile","avaFile","setAvaFile","email","registrationDate","role","userData","setUserData","avaUrl","setAvaUrl","emailError","setEmailError","readOnly","setReadOnly","isEditOpen","setEditOpen","onInputChange","onDrop","useCallback","acceptedFiles","createObjectURL","saveUser","useDropzone","minSize","multiple","getRootProps","getInputProps","isDragActive","isDragReject","background","inputProps","Registration","passwordError","setPasswordError","setStatus","register","isEmailError","isPasswordError","UserActivate","p","progress","LeftMenu","Paper","MenuList","MenuItem","React","createContext","App","setShowAuth","Provider","exact","path","to","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9138ccb1.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst createTokenProvider = () => {\r\n  const loadFromStorage = (): {\r\n    accessToken: string;\r\n    refreshToken: string;\r\n  } | null => {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(\"REACT_TOKEN_AUTH\") || \"null\");\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  let _token = loadFromStorage();\r\n\r\n  const extractUserId = ():String | null => {\r\n    if (_token === null) return null;\r\n\r\n    const split = _token.accessToken.split(\".\");\r\n\r\n    if (split.length < 2) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      const jwt = JSON.parse(atob(split[1]));\r\n      return jwt.sub;\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  let _userId = extractUserId();\r\n\r\n  const getUserId = ():String|null =>{\r\n    return extractUserId();\r\n  }\r\n\r\n  const isLoggedIn = () => {\r\n    return !!_token;\r\n  };\r\n\r\n  const getExpirationDate = (token?: any): number | null => {\r\n    if (!(typeof token === \"string\")) {\r\n      return null;\r\n    }\r\n\r\n    const split = token.split(\".\");\r\n\r\n    if (split.length < 2) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      const jwt = JSON.parse(atob(split[1]));\r\n      if (jwt && jwt.exp && Number.isFinite(jwt.exp)) {\r\n        return jwt.exp * 1000;\r\n      } else {\r\n        return null;\r\n      }\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const isExpired = (exp: number | null): boolean => {\r\n    if (!exp) {\r\n      return false;\r\n    }\r\n\r\n    return Date.now() > exp;\r\n  };\r\n\r\n  let observers: Array<(isLogged: boolean) => void> = [];\r\n\r\n  const subscribe = (observer: (isLogged: boolean) => void) => {\r\n    observers.push(observer);\r\n  };\r\n\r\n  const unsubscribe = (observer: (isLogged: boolean) => void) => {\r\n    observers = observers.filter((o) => o !== observer);\r\n  };\r\n\r\n  const notify = () => {\r\n    const isLogged = isLoggedIn();\r\n    observers.forEach((o) => o(isLogged));\r\n  };\r\n\r\n  const setToken = (token: typeof _token | null) => {\r\n    if (token) {\r\n      localStorage.setItem(\"REACT_TOKEN_AUTH\", JSON.stringify(token));\r\n      _userId = extractUserId();\r\n    } else {\r\n      localStorage.removeItem(\"REACT_TOKEN_AUTH\");\r\n      _userId = null;\r\n    }\r\n    _token = token;\r\n    notify();\r\n  };\r\n\r\n  const getToken = async (): Promise<String> => {\r\n    if (!_token) {\r\n      return \"\";\r\n    }\r\n\r\n    if (isExpired(getExpirationDate(_token.accessToken))) {\r\n      const updateToken = await fetch(\"/update-token\", {\r\n        method: \"POST\",\r\n        body: _token.refreshToken,\r\n      })\r\n        .then((r) => r.json())\r\n        .catch(() => null); ///\r\n\r\n      if (typeof updateToken !== typeof _token) {\r\n        setToken(null);\r\n      }\r\n\r\n      setToken(updateToken);\r\n    }\r\n\r\n    return _token.accessToken;\r\n  };\r\n\r\n  return {\r\n    getToken,\r\n    isLoggedIn,\r\n    setToken,\r\n    subscribe,\r\n    unsubscribe,\r\n    getUserId,\r\n  };\r\n};\r\n\r\nexport const createAuthProvider = () => {\r\n  const tokenProvider = createTokenProvider();\r\n\r\n  const login: typeof tokenProvider.setToken = (newToken) => {\r\n    tokenProvider.setToken(newToken);\r\n  };\r\n\r\n  const logout = () => {\r\n    tokenProvider.setToken(null);\r\n  };\r\n\r\n  const authFetch = async (\r\n    input: RequestInfo,\r\n    init?: RequestInit\r\n  ): Promise<Response> => {\r\n    const token = await tokenProvider.getToken();\r\n\r\n    init = init || {};\r\n\r\n    if (token === \"\") {\r\n      return fetch(input, init);\r\n    }\r\n\r\n    init.headers = {\r\n      ...init.headers,\r\n      Authorization: `${token}`,\r\n    };\r\n\r\n    return fetch(input, init);\r\n  };\r\n\r\n  const useAuth = () => {\r\n    const [isLogged, setLogged] = useState(tokenProvider.isLoggedIn());\r\n\r\n    useEffect(() => {\r\n      const listener = (newIsLogged: boolean) => {\r\n        setLogged(newIsLogged);\r\n      };\r\n\r\n      tokenProvider.subscribe(listener);\r\n      return () => {\r\n        tokenProvider.unsubscribe(listener);\r\n      };\r\n    }, []);\r\n\r\n    return [isLogged] as [typeof isLogged];\r\n  };\r\n\r\n  const getUserId = ():String|null => {\r\n    return tokenProvider.getUserId();\r\n  };\r\n\r\n  return {\r\n    useAuth,\r\n    authFetch,\r\n    login,\r\n    logout,\r\n    getUserId,\r\n  };\r\n};\r\n\r\nexport const { useAuth, authFetch, login, logout, getUserId } = createAuthProvider();\r\n","export default __webpack_public_path__ + \"static/media/cat.9f5abe59.svg\";","import { useContext, useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../App\";\r\nimport {\r\n  authFetch,\r\n  getUserId,\r\n  logout,\r\n  useAuth,\r\n} from \"../services/AuthProvider\";\r\nimport \"react-dropdown/style.css\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"../css/user-popup-menu.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport CatSvg from \"../svg/cat.svg\";\r\n\r\nfunction Header() {\r\n  let context = useContext(AppContext);\r\n\r\n  let history = useHistory();\r\n\r\n  let [isAuth] = useAuth();\r\n\r\n  const [tr, setTr] = useState(false);\r\n\r\n  const [userAvaUrl, setUserAvaUrl] = useState(\"\");\r\n\r\n  context.avatar.trigger = tr;\r\n  context.avatar.fetch = setTr;\r\n\r\n  const onAuthClick = () => {\r\n    context.showAuth(true);\r\n  };\r\n\r\n  const moveToMyPosts = () => {\r\n    history.push(\"/post/user\");\r\n  };\r\n\r\n  const moveToProfile = () => {\r\n    history.push(\"/profile\");\r\n  };\r\n\r\n  const doLogout = () => {\r\n    logout();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const fetchUserAvatar = () => {\r\n    if (!isAuth) return;\r\n    authFetch(`${window.location.origin}/users/avatar/${getUserId()}`)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          logout();\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          return { body: { url: \"\" } };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        setUserAvaUrl(body.url);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => fetchUserAvatar(), [tr]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        flexGrow: 0,\r\n        flexShrink: 1,\r\n        flexBasis: \"auto\",\r\n      }}\r\n    >\r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <div>\r\n          <button className=\"btn\" style={{ width: 60, marginRight: \"3rem\" }} onClick={() => history.push(\"/\")}>\r\n            <img src={CatSvg} />\r\n          </button>\r\n        </div>\r\n        <h1>Simple blog</h1>\r\n      </div>\r\n      <div\r\n        style={{ display: \"flex\", alignItems: \"center\", marginRight: \"3rem\" }}\r\n      >\r\n        <div style={{ marginRight: \"1rem\" }}>\r\n          {/* <img src={SearchLogo} style={{ width: \"4vh\" }} /> */}\r\n        </div>\r\n        {isAuth === true ? (\r\n          <Popup\r\n            trigger={<Avatar src={userAvaUrl} />}\r\n            on=\"hover\"\r\n            position=\"bottom center\"\r\n            closeOnDocumentClick\r\n            mouseEnterDelay={300}\r\n            mouseEnterDelay={0}\r\n            arrow={false}\r\n          >\r\n            <div className=\"user-popup-menu\">\r\n              <div className=\"user-popup-menu-item\">\r\n                <button className=\"btn\" onClick={moveToMyPosts}>\r\n                  My posts\r\n                </button>\r\n              </div>\r\n              <div className=\"user-popup-menu-item\">\r\n                <button className=\"btn\" onClick={moveToProfile}>\r\n                  Profile\r\n                </button>\r\n              </div>\r\n              <div className=\"user-popup-menu-item\">Statistics</div>\r\n              <div\r\n                className=\"user-popup-menu-item\"\r\n                style={{ borderBottom: \"none\" }}\r\n              >\r\n                <button className=\"btn\" onClick={doLogout}>\r\n                  Logout\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Popup>\r\n        ) : (\r\n          <div onClick={onAuthClick} style={{ cursor: \"pointer\" }}>\r\n            <AccountCircleIcon fontSize=\"large\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\n\r\nfunction PostStatistics({ post }) {\r\n  const formatDate = (d) => {\r\n    let [month, date, year] = new Date(d + \"Z\")\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${date}.${month}.${year}`;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        margin: \"0.5rem\",\r\n        justifyContent: \"space-around\",\r\n      }}\r\n    >\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <div style={{ marginRight: \"0.25rem\" }}>\r\n          <ThumbUpIcon />\r\n        </div>\r\n        <div>{post.postStatistics.likeCount}</div>\r\n      </div>\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <div style={{ marginRight: \"0.25rem\" }}>\r\n          <ThumbDownIcon />\r\n        </div>\r\n        <div>{post.postStatistics.dislikeCount}</div>\r\n      </div>\r\n      <div>{formatDate(post.publicationTime)}</div>\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <div style={{ marginRight: \"0.25rem\" }}>\r\n          <VisibilityIcon />\r\n        </div>\r\n        <div>{post.postStatistics.viewCount}</div>\r\n      </div>\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <div style={{ marginRight: \"0.25rem\" }}>\r\n          <ChatBubbleOutlineIcon />\r\n        </div>\r\n        <div>{post.postStatistics.commentCount}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostStatistics;\r\n","import { useHistory } from \"react-router\";\r\nimport PostStatistics from \"./PostStatistics\";\r\n\r\nfunction PostCard({ post }) {\r\n  let history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    history.push(\"/post/view/\" + post.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 375,\r\n        border: \"solid\",\r\n        borderWidth: 1,\r\n        borderRadius: 15,\r\n        borderColor: \"rgb(228, 228, 228)\",\r\n        margin: \"0.5rem\",\r\n      }}\r\n    >\r\n      <div>\r\n        <button className=\"btn\" onClick={handleClick}>\r\n          <div>\r\n            <img\r\n              src={post.postCardImageUrl}\r\n              style={{ borderRadius: 10, width: \"100%\" }}\r\n            />\r\n          </div>\r\n        </button>\r\n      </div>\r\n      <div style={{marginLeft: \"0.5rem\", marginRight: \"0.5rem\"}}>\r\n        <span style={{ fontWeight: 600 }}>{post.title}</span>\r\n      </div>\r\n      <div>\r\n        <PostStatistics post={post} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostCard;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst createTokenProvider = () => {\r\n  const loadFromStorage = (): {\r\n    accessToken: string;\r\n    refreshToken: string;\r\n  } | null => {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(\"REACT_TOKEN_AUTH\") || \"null\");\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  let _token = loadFromStorage();\r\n\r\n  const extractUserId = ():String | null => {\r\n    if (_token === null) return null;\r\n\r\n    const split = _token.accessToken.split(\".\");\r\n\r\n    if (split.length < 2) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      const jwt = JSON.parse(atob(split[1]));\r\n      return jwt.sub;\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  let _userId = extractUserId();\r\n\r\n  const getUserId = ():String|null =>{\r\n    return _userId;\r\n  }\r\n\r\n  const isLoggedIn = () => {\r\n    return !!_token;\r\n  };\r\n\r\n  const getExpirationDate = (token?: any): number | null => {\r\n    if (!(typeof token === \"string\")) {\r\n      return null;\r\n    }\r\n\r\n    const split = token.split(\".\");\r\n\r\n    if (split.length < 2) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      const jwt = JSON.parse(atob(split[1]));\r\n      if (jwt && jwt.exp && Number.isFinite(jwt.exp)) {\r\n        return jwt.exp * 1000;\r\n      } else {\r\n        return null;\r\n      }\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const isExpired = (exp: number | null): boolean => {\r\n    if (!exp) {\r\n      return false;\r\n    }\r\n\r\n    return Date.now() > exp;\r\n  };\r\n\r\n  let observers: Array<(auth: {isLogged: boolean, userId: String | null}) => void> = [];\r\n\r\n  const subscribe = (observer: (auth: {isLogged: boolean, userId: String | null}) => void) => {\r\n    observers.push(observer);\r\n  };\r\n\r\n  const unsubscribe = (observer: (auth: {isLogged: boolean, userId: String | null}) => void) => {\r\n    observers = observers.filter((o) => o !== observer);\r\n  };\r\n\r\n  const notify = () => {\r\n    const isLogged = isLoggedIn();\r\n    const userId = getUserId();\r\n    observers.forEach((o) => o({isLogged: isLogged, userId: userId}));\r\n  };\r\n\r\n  const setToken = (token: typeof _token | null) => {\r\n    let userId = null;\r\n    if (token) {\r\n      localStorage.setItem(\"REACT_TOKEN_AUTH\", JSON.stringify(token));\r\n      userId = extractUserId();\r\n    } else {\r\n      localStorage.removeItem(\"REACT_TOKEN_AUTH\");\r\n    }\r\n    _token = token;\r\n    _userId = userId;\r\n    notify();\r\n  };\r\n\r\n  const getToken = async (): Promise<String> => {\r\n    if (!_token) {\r\n      return \"\";\r\n    }\r\n\r\n    if (isExpired(getExpirationDate(_token.accessToken))) {\r\n      const updateToken = await fetch(\"/update-token\", {\r\n        method: \"POST\",\r\n        body: _token.refreshToken,\r\n      })\r\n        .then((r) => r.json())\r\n        .catch(() => null); ///\r\n\r\n      if (typeof updateToken !== typeof _token) {\r\n        setToken(null);\r\n      }\r\n\r\n      setToken(updateToken);\r\n    }\r\n\r\n    return _token.accessToken;\r\n  };\r\n\r\n  return {\r\n    getToken,\r\n    isLoggedIn,\r\n    setToken,\r\n    subscribe,\r\n    unsubscribe,\r\n    getUserId,\r\n  };\r\n};\r\n\r\nexport const createAuthProvider = () => {\r\n  const tokenProvider = createTokenProvider();\r\n\r\n  const login: typeof tokenProvider.setToken = (newToken) => {\r\n    tokenProvider.setToken(newToken);\r\n  };\r\n\r\n  const logout = () => {\r\n    tokenProvider.setToken(null);\r\n  };\r\n\r\n  const authFetch = async (\r\n    input: RequestInfo,\r\n    init?: RequestInit\r\n  ): Promise<Response> => {\r\n    const token = await tokenProvider.getToken();\r\n\r\n    init = init || {};\r\n\r\n    if (token === \"\") {\r\n      return fetch(input, init);\r\n    }\r\n\r\n    init.headers = {\r\n      ...init.headers,\r\n      Authorization: `${token}`,\r\n    };\r\n\r\n    return fetch(input, init);\r\n  };\r\n\r\n  const useAuth = () => {\r\n    const [auth, setLogged] = useState({isLogged: tokenProvider.isLoggedIn(), userId: tokenProvider.getUserId()});\r\n\r\n    useEffect(() => {\r\n      const listener = (newAuth: {isLogged: boolean, userId: String | null}) => {\r\n        setLogged(newAuth);\r\n      };\r\n\r\n      tokenProvider.subscribe(listener);\r\n      return () => {\r\n        tokenProvider.unsubscribe(listener);\r\n      };\r\n    }, []);\r\n\r\n    return [auth] as [typeof auth];\r\n  };\r\n\r\n  const getUserId = ():String|null => {\r\n    return tokenProvider.getUserId();\r\n  };\r\n\r\n  return {\r\n    useAuth,\r\n    authFetch,\r\n    login,\r\n    logout,\r\n    getUserId,\r\n  };\r\n};\r\n\r\nexport const { useAuth, authFetch, login, logout, getUserId } = createAuthProvider();\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport PostCard from \"./PostCard\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { authFetch, useAuth } from \"../services/AuthProvider\";\r\nimport { AppContext } from \"../App\";\r\nimport { Button, CircularProgress } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\nimport { logout } from \"../services/AuthProvider____\";\r\n\r\nfunction PostList() {\r\n  let history = useHistory();\r\n\r\n  let context = useContext(AppContext);\r\n\r\n  // let isAuth = useAuth();\r\n\r\n  const [posts, setPosts] = useState({\r\n    postList: [],\r\n    pageNumber: -1,\r\n    totalPages: 2,\r\n    hasNext: true,\r\n  });\r\n\r\n  const [sort, setSort] = useState({ field: \"id\", direction: \"asc\" });\r\n\r\n  const fetchPosts = () => {\r\n    console.log(sort);\r\n    let nextPage = posts.pageNumber + 1;\r\n    let hasNext = !(nextPage === posts.totalPages);\r\n    let url = new URL(window.location.origin + \"/posts\");\r\n    let params = {\r\n      pageNumber: nextPage,\r\n      pageSize: 12,\r\n      sort: sort.field,\r\n      direction: sort.direction,\r\n    };\r\n    Object.keys(params).forEach((key) =>\r\n      url.searchParams.append(key, params[key])\r\n    );\r\n    authFetch(url)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          logout();\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          //todo add redirect\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        setPosts({\r\n          postList: [...posts.postList, ...body.postCartDataList],\r\n          pageNumber: nextPage,\r\n          hasNext: hasNext,\r\n          totalPages: body.totalPages,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const onBestSort = () => {\r\n    fetchSorted(\"postStatistics.likeCount\", \"desc\");\r\n  };\r\n\r\n  const onPopularSort = () => {\r\n    fetchSorted(\"postStatistics.commentCount\", \"desc\");\r\n  };\r\n\r\n  const fetchSorted = (sort, direction) => {\r\n    setPosts({\r\n      postList: [],\r\n      pageNumber: -1,\r\n      hasNext: true,\r\n      totalPages: 0,\r\n    });\r\n\r\n    setSort({ field: sort, direction: direction });\r\n\r\n    let url = new URL(window.location.origin + \"/posts\");\r\n    let params = {\r\n      pageNumber: 0,\r\n      pageSize: 12,\r\n      sort: sort,\r\n      direction: direction,\r\n    };\r\n    Object.keys(params).forEach((key) =>\r\n      url.searchParams.append(key, params[key])\r\n    );\r\n    authFetch(url)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          logout();\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          //todo add redirect\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        setPosts({\r\n          postList: [...body.postCartDataList],\r\n          pageNumber: 1,\r\n          hasNext: true,\r\n          totalPages: body.totalPages,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => fetchPosts(), []);\r\n\r\n  return (\r\n    <div>\r\n      <div style={{display: \"flex\"}}>\r\n        <div>\r\n          <Button onClick={onBestSort}>Best</Button>\r\n        </div>\r\n        <div style={{ marginRight: \"2rem\" }}>\r\n          <Button onClick={onPopularSort}>Popular</Button>\r\n        </div>\r\n      </div>\r\n      <div id=\"scrollableDiv\" style={{ height: \"100vh\", overflowY: \"auto\" }}>\r\n        <InfiniteScroll\r\n          dataLength={posts.postList.length}\r\n          next={fetchPosts}\r\n          hasMore={posts.hasNext}\r\n          loader={\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <CircularProgress />\r\n            </div>\r\n          }\r\n          endMessage={\r\n            <div style={{ width: \"100%\" }}>\r\n              <span>No moaaar!!</span>\r\n            </div>\r\n          }\r\n          scrollableTarget=\"scrollableDiv\"\r\n          style={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n          }}\r\n        >\r\n          {posts.postList.map((post) => (\r\n            <PostCard key={post.id} post={post} />\r\n          ))}\r\n        </InfiniteScroll>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostList;\r\n","function Footer() {\r\n  return (\r\n    <div style={{flexGrow: 0, flexShrink: 1, flexBasis: 70}}>\r\n      <span>Otus diploma project</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\n\r\nimport { Avatar, Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { useContext, useState } from \"react\";\r\nimport { AppContext } from \"../App\";\r\nimport { authFetch, getUserId, logout } from \"../services/AuthProvider\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Comment({ comment, isAuth }) {\r\n\r\n  let context = useContext(AppContext);\r\n\r\n  let style = isAuth ? {} : { cursor: \"not-allowed\", pointerEvents: \"none\" };\r\n\r\n  let userId = getUserId();\r\n\r\n  let history = useHistory();\r\n\r\n  const onLike = () => {};\r\n\r\n  const [commentText, setCommentText] = useState(comment.text);\r\n\r\n  const [edit, setEdit] = useState({ isShow: false, text: \"\", error: false });\r\n\r\n  const onOpenEdit = () => {\r\n    setEdit({ isShow: !edit.isShow, text: commentText, error: false });\r\n  };\r\n\r\n  const onEditFieldChange = (e) => {\r\n    setEdit({ isShow: edit.isShow, text: e.target.value, error: false });\r\n  };\r\n\r\n  const onEditSubmit = () => {\r\n    if (edit.text === \"\") {\r\n      setEdit({ isShow: edit.isShow, text: edit.text, error: true });\r\n    }\r\n    authFetch(`${window.location.origin}/comments/${comment.id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        postId: comment.postId,\r\n        text: edit.text,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          logout();\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          return { result: false };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        if (body.result === true) {\r\n          setCommentText(edit.text);\r\n          setEdit({ isShow: false, text: \"\", error: false });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const onDislike = () => {};\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"0.5rem\" }}>\r\n      <Avatar src={comment.user.avatarUrl} />\r\n      <div style={{ width: \"100%\" }}>\r\n        <div style={{ marginLeft: \"0.25rem\" }}>\r\n          <span\r\n            style={{ fontWeight: 600 }}\r\n          >{`${comment.user.firstName} ${comment.user.lastName}`}</span>\r\n        </div>\r\n        {comment.isEnabled === true ? (\r\n          <div>\r\n            <div style={{ marginLeft: \"0.5rem\" }}>{commentText}</div>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginRight: \"0.5rem\",\r\n                  }}\r\n                >\r\n                  <div style={{ marginRight: \"0.25rem\" }}>\r\n                    <IconButton color=\"primary\" onClick={onLike} style={style}>\r\n                      <ThumbUpIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div style={{ paddingBottom: 12, paddingTop: 12 }}>\r\n                    {comment.likes}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginRight: \"0.5rem\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <div style={{ marginRight: \"0.25rem\" }}>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={onDislike}\r\n                      style={style}\r\n                    >\r\n                      <ThumbDownIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div style={{ paddingBottom: 12, paddingTop: 12 }}>\r\n                    {comment.dislikes}\r\n                  </div>\r\n                </div>\r\n                {isAuth && comment.user.id === userId ? (\r\n                  <div style={{ alignSelf: \"center\" }}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      onClick={onOpenEdit}\r\n                      style={{ marginRight: \"1rem\" }}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                    {edit.isShow ? (\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={onEditSubmit}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {edit.isShow ? (\r\n              <div>\r\n                <TextField\r\n                  onChange={onEditFieldChange}\r\n                  helperText={edit.error ? \"Comment must not be empty\" : \"\"}\r\n                  error={edit.error}\r\n                  value={edit.text}\r\n                  multiline\r\n                  rowsMax={5}\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}>\r\n            <span style={{ color: \"rgb(150,0,0)\" }}>\r\n              The comment was blocked\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n","export const formatDate = (d) => {\r\n  let [month, date, year] = new Date(d + \"Z\")\r\n    .toLocaleDateString(\"en-US\")\r\n    .split(\"/\");\r\n  return `${date}.${month}.${year}`;\r\n};","import { Button, TextField } from \"@material-ui/core\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AppContext } from \"../App\";\r\nimport { authFetch } from \"../services/AuthProvider\";\r\nimport { logout } from \"../services/AuthProvider____\";\r\n\r\nfunction AddComment({ postId, comments, setComments, postData, setPostData }) {\r\n  let context = useContext(AppContext);\r\n\r\n  let history = useHistory();\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const [isError, setError] = useState(false);\r\n\r\n  const addComment = () => {\r\n    if (text === \"\") {\r\n      setError(true);\r\n      return;\r\n    }\r\n    authFetch(`${window.location.origin}/comments`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        postId: postId,\r\n        text: text,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          logout();\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          //todo add redirect\r\n          setComments({\r\n            commentList: [],\r\n            pageNumber: 0,\r\n            totalPages: 0,\r\n            hasNext: false,\r\n          });\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        if(body.result === false){\r\n          return;\r\n        }\r\n        setComments({\r\n          commentList: [body, ...comments.commentList],\r\n          pageNumber: comments.nextPage,\r\n          totalPages: comments.totalPages,\r\n          hasNext: comments.hasNext,\r\n        });\r\n        let newPost = { ...postData.post };\r\n        newPost.postStatistics.commentCount =\r\n          newPost.postStatistics.commentCount + 1;\r\n        setPostData({\r\n          post: newPost,\r\n          isVote: postData.isVote,\r\n          voteValue: postData.voteValue,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(typeof err);\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const onTextChange = (event) => {\r\n    setError(false);\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <TextField\r\n          helperText={isError ? \"Comment can't be empty\" : \"\"}\r\n          error={isError}\r\n          onChange={onTextChange}\r\n          multiline\r\n          rowsMax={5}\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{ marginTop: \"1rem\", marginBottom: \"1rem\", textAlign: \"center\" }}\r\n      >\r\n        <Button variant=\"contained\" color=\"primary\" onClick={addComment}>\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddComment;\r\n","import ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\n\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { authFetch, useAuth } from \"../services/AuthProvider\";\r\nimport Comment from \"./Comment\";\r\nimport { Avatar, CircularProgress, IconButton } from \"@material-ui/core\";\r\nimport { formatDate } from \"../services/utils\";\r\nimport AddComment from \"./AddComment\";\r\nimport { AppContext } from \"../App\";\r\nimport { logout } from \"../services/AuthProvider____\";\r\n\r\nfunction Post() {\r\n  let context = useContext(AppContext);\r\n\r\n  let { id } = useParams();\r\n\r\n  let [isAuth] = useAuth();\r\n\r\n  let history = useHistory();\r\n\r\n  const [postData, setPostData] = useState({\r\n    post: {\r\n      postStatistics: {},\r\n      user: { firstName: \"\", lastName: \"\" },\r\n    },\r\n  });\r\n\r\n  const [comments, setComments] = useState({\r\n    commentList: [],\r\n    pageNumber: -1,\r\n    totalPages: 2,\r\n    hasNext: true,\r\n  });\r\n\r\n  let voteStyle = (value) => {\r\n    if (isAuth) {\r\n      if (postData.isVote === true) {\r\n        if (value) {\r\n          return postData.voteValue\r\n            ? {\r\n                cursor: \"not-allowed\",\r\n                pointerEvents: \"none\",\r\n                color: \"rgb(15,148,15)\",\r\n              }\r\n            : {};\r\n        } else {\r\n          return postData.voteValue\r\n            ? {}\r\n            : {\r\n                cursor: \"not-allowed\",\r\n                pointerEvents: \"none\",\r\n                color: \"rgb(15,148,15)\",\r\n              };\r\n        }\r\n      } else {\r\n        return {};\r\n      }\r\n    } else {\r\n      return {\r\n        cursor: \"not-allowed\",\r\n        pointerEvents: \"none\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const fetchPost = () => {\r\n    let url = new URL(`${window.location.origin}/posts/${id}`);\r\n    authFetch(url)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          logout();\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          //todo add redirect\r\n          setPostData({});\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((result) => setPostData(result))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const fetchComments = () => {\r\n    let nextPage = comments.pageNumber + 1;\r\n    let hasNext = !(nextPage === comments.totalPages);\r\n    let url = new URL(`${window.location.origin}/comments`);\r\n    let params = {\r\n      pageNumber: nextPage,\r\n      pageSize: 12,\r\n      sort: \"id\",\r\n      postId: id,\r\n    };\r\n    Object.keys(params).forEach((key) =>\r\n      url.searchParams.append(key, params[key])\r\n    );\r\n    authFetch(url)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          logout();\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          //todo add redirect\r\n          return {\r\n            commentList: [],\r\n            pageNumber: 0,\r\n            totalPages: 0,\r\n            hasNext: false,\r\n          };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        setComments({\r\n          commentList: [...comments.commentList, ...body.commentList],\r\n          pageNumber: nextPage,\r\n          totalPages: body.totalPages,\r\n          hasNext: hasNext,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const onLike = () => {\r\n    authFetch(`${window.location.origin}/votes`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        postId: postData.post.id,\r\n        value: true,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          logout();\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          //todo add redirect\r\n          return { result: false };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        if (body.result === true) {\r\n          let newPost = { ...postData.post };\r\n          newPost.postStatistics.likeCount =\r\n            newPost.postStatistics.likeCount + 1;\r\n          newPost.postStatistics.dislikeCount =\r\n            newPost.postStatistics.dislikeCount - 1;\r\n          setPostData({\r\n            post: newPost,\r\n            isVote: true,\r\n            voteValue: true,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const onDislike = () => {\r\n    authFetch(`${window.location.origin}/votes`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        postId: postData.post.id,\r\n        value: false,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          logout();\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          //todo add redirect\r\n          return { result: false };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        if (body.result === true) {\r\n          let newPost = { ...postData.post };\r\n          newPost.postStatistics.likeCount =\r\n            newPost.postStatistics.likeCount - 1;\r\n          newPost.postStatistics.dislikeCount =\r\n            newPost.postStatistics.dislikeCount + 1;\r\n          setPostData({\r\n            post: newPost,\r\n            isVote: true,\r\n            voteValue: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => fetchPost(), []);\r\n  useEffect(() => fetchComments(), []);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"comment-c\" style={{ height: \"100vh\", overflowY: \"auto\" }}>\r\n        <InfiniteScroll\r\n          dataLength={comments.commentList.length}\r\n          next={fetchComments}\r\n          hasMore={comments.hasNext}\r\n          loader={<CircularProgress />}\r\n          endMessage={\r\n            <div style={{ width: \"100%\" }}>\r\n              <span>No moaaar!!</span>\r\n            </div>\r\n          }\r\n          scrollableTarget=\"comment-c\"\r\n          style={{ margin: \"1rem\" }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div style={{ marginRight: \"0.25rem\" }}>\r\n              <Avatar src={postData.post.avatarUrl} />\r\n            </div>\r\n            <div\r\n              style={{ marginRight: \"0.25rem\" }}\r\n            >{`${postData.post.user.firstName} ${postData.post.user.lastName}`}</div>\r\n            <div style={{ marginRight: \"0.25rem\" }}>\r\n              <div>{formatDate(postData.post.publicationTime)}</div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h1>{postData.post.title}</h1>\r\n          </div>\r\n          <div\r\n            style={{ marginBottom: \"1rem\" }}\r\n            dangerouslySetInnerHTML={{ __html: postData.post.text }}\r\n          ></div>\r\n          <div>\r\n            <div\r\n              style={{ display: \"flex\", flexDirection: \"row\", margin: \"1rem\" }}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  marginRight: \"0.5rem\",\r\n                }}\r\n              >\r\n                <div style={{ marginRight: \"0.25rem\" }}>\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    onClick={onLike}\r\n                    style={voteStyle(true)}\r\n                  >\r\n                    <ThumbUpIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div style={{ paddingBottom: 12, paddingTop: 12 }}>\r\n                  {postData.post.postStatistics.likeCount}\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  marginRight: \"0.5rem\",\r\n                }}\r\n              >\r\n                <div style={{ marginRight: \"0.25rem\" }}>\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    onClick={onDislike}\r\n                    style={voteStyle(false)}\r\n                  >\r\n                    <ThumbDownIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div style={{ paddingBottom: 12, paddingTop: 12 }}>\r\n                  {postData.post.postStatistics.dislikeCount}\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  marginRight: \"0.5rem\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    marginRight: \"0.25rem\",\r\n                    paddingBottom: 12,\r\n                    paddingTop: 12,\r\n                  }}\r\n                >\r\n                  <VisibilityIcon />\r\n                </div>\r\n                <div style={{ paddingBottom: 12, paddingTop: 12 }}>\r\n                  {postData.post.postStatistics.viewCount}\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  marginRight: \"0.5rem\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    marginRight: \"0.25rem\",\r\n                    paddingBottom: 12,\r\n                    paddingTop: 12,\r\n                  }}\r\n                >\r\n                  <ChatBubbleOutlineIcon />\r\n                </div>\r\n                <div style={{ paddingBottom: 12, paddingTop: 12 }}>\r\n                  {postData.post.postStatistics.commentCount}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div>\r\n            <h2>Comments</h2>\r\n          </div>\r\n          {isAuth ? (\r\n            <div>\r\n              <AddComment\r\n                postId={postData.post.id}\r\n                comments={comments}\r\n                setComments={setComments}\r\n                postData={postData}\r\n                setPostData={setPostData}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h4>Comments allowed only for registered users</h4>\r\n            </div>\r\n          )}\r\n          {comments.commentList.length > 0 ? (\r\n            comments.commentList.map((comment) => (\r\n              <Comment key={comment.id} comment={comment} isAuth={isAuth} />\r\n            ))\r\n          ) : (\r\n            <div>There is no comments</div>\r\n          )}\r\n        </InfiniteScroll>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { forwardRef, useContext, useRef, useState } from \"react\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Input\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\r\n\r\nimport { authFetch } from \"../services/AuthProvider\";\r\nimport {\r\n  Checkbox,\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  Radio,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { useHistory } from \"react-router\";\r\nimport { formatDate } from \"../services/utils\";\r\nimport { AppContext } from \"../App\";\r\nimport { logout } from \"../services/AuthProvider____\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nfunction UserPostList() {\r\n  let history = useHistory();\r\n\r\n  let tableRef = useRef();\r\n\r\n  let context = useContext(AppContext);\r\n\r\n  const status = {\r\n    moderated: \"MODERATED\",\r\n    published: \"PUBLISHED\",\r\n    declined: \"DECLINED\",\r\n    inactive: \"INACTIVE\",\r\n    future: \"FUTURE\",\r\n    all: \"ALL\",\r\n  };\r\n\r\n  const [state, setState] = useState(status.published);\r\n\r\n  const [isConfirmOpen, setConfirmOpen] = useState({\r\n    isOpen: false,\r\n    id: null,\r\n  });\r\n\r\n  // const [post, setPost] = useState({});\r\n\r\n  const closeConfirm = () => {\r\n    setConfirmOpen(false);\r\n  };\r\n\r\n  const statusChangeHandler = (event) => {\r\n    setState(event.target.value);\r\n    tableRef.current.onQueryChange();\r\n  };\r\n\r\n  const onDelete = () => {\r\n    let id = isConfirmOpen.id;\r\n    setConfirmOpen({ isOpen: false, id: null });\r\n    authFetch(`${window.location.origin}/posts/${id}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          logout();\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          return { result: false };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        if (body.result === true) {\r\n          tableRef.current.onQueryChange();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const moveToPostPage = (id) => {\r\n    history.push(\"/post/view/\" + id);\r\n  };\r\n\r\n  const moveToEditPage = (id) => {\r\n    history.push(\"/post/edit/\" + id);\r\n  };\r\n\r\n  const moveToNewPost = () => {\r\n    history.push(\"/post/new\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Popup open={isConfirmOpen.isOpen} onClose={closeConfirm}>\r\n        <div className=\"modal\">\r\n          <div className=\"modal-main\" style={{ width: 300 }}>\r\n            <div style={{ margin: \"2rem\" }}>\r\n              <div style={{ marginBottom: \"2rem\" }}>\r\n                <h2 style={{ textAlign: \"center\" }}>\r\n                  The post will be permanently deleted!\r\n                </h2>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-around\",\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => onDelete()}\r\n                >\r\n                  Confirm\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"default\"\r\n                  onClick={() => setConfirmOpen({ isOpen: false, id: null })}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n      <MaterialTable\r\n        tableRef={tableRef}\r\n        style={{ boxShadow: \"none\" }}\r\n        columns={[\r\n          {\r\n            title: \"Header\",\r\n            field: \"postCardImageUrl\",\r\n            render: (rowData) => (\r\n              <img\r\n                style={{ width: \"100%\", borderRadius: 15 }}\r\n                src={rowData.postCardImageUrl}\r\n              />\r\n            ),\r\n            width: null,\r\n            cellStyle: { width: \"10%\" },\r\n            editable: \"never\",\r\n          },\r\n          {\r\n            title: \"Active\",\r\n            field: \"isActive\",\r\n            render: (rowData) => (\r\n              <Checkbox color=\"primary\" checked={rowData.isActive} />\r\n            ),\r\n            width: null,\r\n            cellStyle: { width: \"5%\" },\r\n            editComponent: (props) => (\r\n              <div>\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  checked={props.rowData.isActive}\r\n                  onChange={(e) => props.onChange(e.target.checked)}\r\n                />\r\n              </div>\r\n            ),\r\n          },\r\n          {\r\n            title: \"Publication time\",\r\n            field: \"publicationTime\",\r\n            width: null,\r\n            cellStyle: { width: \"25%\" },\r\n            render: (rowData) => formatDate(rowData.publicationTime),\r\n            editComponent: (props) => (\r\n              <div>\r\n                <TextField\r\n                  type=\"datetime-local\"\r\n                  value={props.rowData.publicationTime}\r\n                  onChange={(e) => props.onChange(e.target.value)}\r\n                />\r\n              </div>\r\n            ),\r\n          },\r\n          {\r\n            title: \"Title\",\r\n            field: \"title\",\r\n            width: null,\r\n            cellStyle: { width: \"60%\" },\r\n            editable: \"never\",\r\n          },\r\n        ]}\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <MTableToolbar {...props} />\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <RadioGroup\r\n                  style={{ flexDirection: \"row\" }}\r\n                  aria-label=\"Post status\"\r\n                  value={state}\r\n                  onChange={statusChangeHandler}\r\n                  // color=\"primary\"\r\n                >\r\n                  <FormControlLabel\r\n                    labelPlacement=\"top\"\r\n                    value={status.published}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Published\"\r\n                  />\r\n                  <FormControlLabel\r\n                    labelPlacement=\"top\"\r\n                    value={status.moderated}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Moderated\"\r\n                  />\r\n                  <FormControlLabel\r\n                    labelPlacement=\"top\"\r\n                    value={status.declined}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Declined\"\r\n                  />\r\n                  <FormControlLabel\r\n                    labelPlacement=\"top\"\r\n                    value={status.inactive}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Inactive\"\r\n                  />\r\n                  <FormControlLabel\r\n                    labelPlacement=\"top\"\r\n                    value={status.future}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Future\"\r\n                  />\r\n                  <FormControlLabel\r\n                    labelPlacement=\"top\"\r\n                    value={status.all}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"All\"\r\n                  />\r\n                </RadioGroup>\r\n                <div>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={moveToNewPost}\r\n                  >\r\n                    New post\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n        data={(query) =>\r\n          new Promise((resolve, reject) => {\r\n            let url = new URL(window.location.origin + \"/posts/user\");\r\n            let params = {\r\n              pageNumber: query.page,\r\n              pageSize: query.pageSize,\r\n              status: state,\r\n              sort: \"id\",\r\n            };\r\n            Object.keys(params).forEach((key) =>\r\n              url.searchParams.append(key, params[key])\r\n            );\r\n            authFetch(url)\r\n              .then((response) => {\r\n                if (response.ok) {\r\n                  return response.json();\r\n                } else if (response.status === 403) {\r\n                  logout();\r\n                  context.showAuth(true);\r\n                  history.push(\"/\");\r\n                  return {\r\n                    postByUserList: [],\r\n                    page: 0,\r\n                    totalElements: 0,\r\n                  };\r\n                } else {\r\n                  throw new Error(\"Error code: \" + response.status);\r\n                }\r\n              })\r\n              .then((result) => {\r\n                resolve({\r\n                  data: result.postByUserList,\r\n                  page: result.page,\r\n                  totalCount: result.totalElements,\r\n                });\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n                history.push(\"/error\");\r\n              });\r\n          })\r\n        }\r\n        editable={{\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              let url = `${window.location.origin}/posts/${newData.id}`;\r\n\r\n              authFetch(url, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json;charset=utf-8\",\r\n                },\r\n                body: JSON.stringify({\r\n                  title: null,\r\n                  text: null,\r\n                  publicationTime: newData.publicationTime,\r\n                  isActive: newData.isActive,\r\n                  postCardImageUrl: null,\r\n                }),\r\n              }).then((response) => {\r\n                if (response.ok) {\r\n                  resolve();\r\n                } else if (response.status === 403) {\r\n                  logout();\r\n                  context.showAuth();\r\n                  history.push(\"/\");\r\n                } else {\r\n                  throw new Error(\"Error code: \" + response.status);\r\n                }\r\n              });\r\n            }).catch((err) => {\r\n              console.log(err);\r\n              history.push(\"/error\");\r\n            }),\r\n        }}\r\n        actions={[\r\n          {\r\n            icon: () => <DeleteOutline color=\"primary\" />,\r\n            tooltip: \"Delete post\",\r\n            onClick: (event, rowData) =>\r\n              setConfirmOpen({ isOpen: true, id: rowData.id }),\r\n          },\r\n          {\r\n            icon: () => <EditIcon />,\r\n            tooltip: \"Edit page\",\r\n            onClick: (event, rowData) => moveToEditPage(rowData.id),\r\n          },\r\n          {\r\n            icon: () => <OpenInNewIcon />,\r\n            tooltip: \"View\",\r\n            onClick: (event, rowData) => moveToPostPage(rowData.id),\r\n          },\r\n        ]}\r\n        icons={tableIcons}\r\n        title=\"All posts list\"\r\n        options={{\r\n          actionsColumnIndex: 5,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserPostList;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { authFetch } from \"../services/AuthProvider\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { AppContext } from \"../App\";\r\nimport { logout } from \"../services/AuthProvider____\";\r\n\r\nlet quillObject;\r\n\r\nconst imageHandler = () => {\r\n  const input = document.createElement(\"input\");\r\n\r\n  input.setAttribute(\"type\", \"file\");\r\n  input.setAttribute(\"accept\", \"image/*\");\r\n  input.click();\r\n\r\n  input.onchange = async () => {\r\n    const file = input.files[0];\r\n    //check file !==null?\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    const res = await uploadFile(formData);\r\n  };\r\n};\r\n\r\nconst uploadFile = async (formData) => {\r\n  let url = new URL(window.location.origin + \"/images/upload\");\r\n  authFetch(url, { method: \"POST\", body: formData })\r\n  .then((response) => {\r\n    if (response.ok) {\r\n      response.json().then((body) => {\r\n        let url = body.url;\r\n        const range = quillObject.getEditorSelection();\r\n        quillObject.getEditor().insertEmbed(range.index, \"image\", url);\r\n      });\r\n    } else {\r\n      console.log(\"!!!\");\r\n    }\r\n  });\r\n};\r\n\r\nconst modules = {\r\n  toolbar: {\r\n    container: [\r\n      [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\r\n      [{ size: [] }],\r\n      [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n      [\r\n        { list: \"ordered\" },\r\n        { list: \"bullet\" },\r\n        { indent: \"-1\" },\r\n        { indent: \"+1\" },\r\n        { align: [] },\r\n      ],\r\n      [\"link\", \"image\", \"video\"],\r\n      [\"clean\"],\r\n    ],\r\n    handlers: {\r\n      image: imageHandler,\r\n    },\r\n  },\r\n  clipboard: {\r\n    // toggle to add extra line breaks when pasting HTML:\r\n    matchVisual: false,\r\n  },\r\n};\r\n\r\nfunction EditPost({ postId, isEdit, isNew }) {\r\n  let context = useContext(AppContext);\r\n\r\n  let { pathId } = useParams();\r\n\r\n  let id = postId === undefined ? pathId : postId;\r\n\r\n  let params = {\r\n    title: \"\",\r\n    isActive: false,\r\n    publicationTime: new Date(),\r\n    postCardImageUrl: \"\",\r\n    text: \"\",\r\n  };\r\n\r\n  const setUp = () => {\r\n    if (isEdit) {\r\n      authFetch(`${window.location.origin}/posts/user/${id}`)\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            return response.json();\r\n          } else if (response.status === 403) {\r\n            logout();\r\n            context.showAuth(true);\r\n            history.push(\"/\");\r\n            //todo add redirect\r\n          } else {\r\n            throw new Error(\"Error code: \" + response.status);\r\n          }\r\n        })\r\n        .then((result) => {\r\n          setState(result.text);\r\n          setHeaderImageUrl(result.postCardImageUrl);\r\n          setPostData({\r\n            title: result.title,\r\n            isActive: result.isActive,\r\n          });\r\n          setPubDatetime(result.publicationTime);\r\n        }).catch(err =>{\r\n          console.log(err);\r\n          history.push(\"/error\");\r\n        });\r\n    }\r\n    if (isNew) {\r\n      setState(params.text);\r\n      setHeaderImageUrl(params.postCardImageUrl);\r\n      setPostData({\r\n        title: params.title,\r\n        isActive: params.isActive,\r\n      });\r\n      setPubDatetime(params.publicationTime);\r\n    }\r\n  };\r\n\r\n  let history = useHistory();\r\n\r\n  const [state, setState] = useState(params.text);\r\n\r\n  const [postData, setPostData] = useState({\r\n    title: params.title,\r\n    isActive: params.isActive,\r\n  });\r\n\r\n  const [pubDatetime, setPubDatetime] = useState(params.publicationTime); /////\r\n\r\n  const [headerImageUrl, setHeaderImageUrl] = useState(params.postCardImageUrl);\r\n\r\n  const onTitleChange = (event) => {\r\n    setPostData({ ...postData, title: event.target.value });\r\n  };\r\n\r\n  const onIsActiveChange = (event) => {\r\n    setPostData({ ...postData, isActive: event.target.checked });\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    setState(value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    let url = isEdit\r\n      ? `${window.location.origin}/posts/${id}`\r\n      : `${window.location.origin}/posts`;\r\n    let method = isEdit ? \"PUT\" : \"POST\";\r\n\r\n    authFetch(url, {\r\n      method: method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        title: postData.title,\r\n        text: state,\r\n        publicationTime: pubDatetime,\r\n        isActive: postData.isActive,\r\n        postCardImageUrl: headerImageUrl,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          logout();\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          return { result: false };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        if (body.result === true) {\r\n          history.push(\"/post/user\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const onHeaderImageChange = (event) => {\r\n    const formData = new FormData();\r\n    formData.append(\"xScale\", 5);\r\n    formData.append(\"yScale\", 3);\r\n    formData.append(\"image\", event.target.files[0]);\r\n    let url = new URL(window.location.origin + \"/images/header/upload\");\r\n    authFetch(url, { method: \"POST\", body: formData })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          logout();\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          return { url: \"\" };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        let url = body.url;\r\n        setHeaderImageUrl(url);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => setUp(), [id]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <div style={{ textAlign: \"center\" }}>\r\n            {isEdit ? <h3>Update post</h3> : <h3>Create new post</h3>}\r\n          </div>\r\n          <hr />\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <div\r\n            style={{\r\n              width: \"50%\",\r\n              margin: \"0.5rem\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <div style={{ margin: \"0.5rem\" }}>\r\n              <div>Title</div>\r\n              <textarea\r\n                name=\"title\"\r\n                style={{ width: \"100%\", resize: \"none\" }}\r\n                rows=\"5\"\r\n                value={postData.title}\r\n                onChange={onTitleChange}\r\n              ></textarea>\r\n            </div>\r\n            <div style={{ margin: \"0.5rem\" }}>\r\n              <div>Publication time</div>\r\n              <DateTimePicker\r\n                onChange={setPubDatetime}\r\n                value={new Date(pubDatetime)}\r\n              />\r\n            </div>\r\n            <div style={{ margin: \"0.5rem\" }}>\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"isActive\"\r\n                checked={postData.isActive}\r\n                onChange={onIsActiveChange}\r\n              />\r\n              <span>Is this post will be active?</span>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"space-between\",\r\n              width: \"50%\",\r\n              margin: \"0.5rem\",\r\n            }}\r\n          >\r\n            <div style={{ margin: \"0.5rem\" }}>\r\n              Header image<span>(will be centered and clipped to 5x3)</span>\r\n            </div>\r\n            <div>\r\n              <img\r\n                src={headerImageUrl}\r\n                style={{ width: \"100%\", borderRadius: 15 }}\r\n              />\r\n              <div style={{ margin: \"0.5rem\" }}>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"/image*\"\r\n                  onChange={onHeaderImageChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <ReactQuill\r\n          ref={(el) => (quillObject = el)}\r\n          value={state}\r\n          modules={modules}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{ margin: \"1rem\", display: \"flex\", justifyContent: \"center\" }}\r\n      >\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditPost;\r\n","function NotFound() {\r\n  return <h1>Page not found</h1>\r\n}\r\n\r\nexport default NotFound;\r\n","import CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport { Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { useContext, useState } from \"react\";\r\nimport { AppContext } from \"../App\";\r\nimport \"../css/login.css\";\r\nimport { login } from \"../services/AuthProvider\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Login({ show, handleClose }) {\r\n  let context = useContext(AppContext);\r\n\r\n  let history = useHistory();\r\n\r\n  const loginClassName =\r\n    show === true ? \"modal display-block\" : \"modal display-none\";\r\n\r\n  const [credentials, setCredentials] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [isError, setError] = useState(false);\r\n\r\n  const onChange = ({ target: { name, value } }) => {\r\n    setCredentials({ ...credentials, [name]: value });\r\n    setError(false);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    fetch(\"/login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(credentials),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          let authToken = response.headers.get(\"Authorization\");\r\n          let refreshToken = response.headers.get(\"Refresh\");\r\n          if (authToken === null || refreshToken === null) {\r\n            throw new Error();\r\n          }\r\n          return {\r\n            accessToken: authToken,\r\n            refreshToken: refreshToken,\r\n          };\r\n        } else {\r\n          throw new Error();\r\n        }\r\n      })\r\n      .then((token) => {\r\n        login(token);\r\n        setCredentials({\r\n          username: \"\",\r\n          password: \"\",\r\n        });\r\n        context.showAuth(false);\r\n        context.avatar.fetch(!context.avatar.trigger);\r\n      })\r\n      .catch((err) => setError(true));\r\n  };\r\n\r\n  const moveToRegistration = () =>{\r\n    history.push(\"/registration\");\r\n    context.showAuth(false);\r\n\r\n  }\r\n\r\n  return (\r\n    <div className={loginClassName}>\r\n      <div className=\"modal-main\">\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            position: \"absolute\",\r\n            right: 0,\r\n            top: 0,\r\n          }}\r\n        >\r\n          <IconButton onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n        <form onSubmit={onSubmit}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              margin: \"1rem\",\r\n            }}\r\n          >\r\n            <h2 style={{ textAlign: \"center\" }}>Please sign in</h2>\r\n            <div style={{ marginBottom: \"0.5rem\" }}>\r\n              <TextField\r\n                error={isError}\r\n                variant=\"outlined\"\r\n                name=\"username\"\r\n                value={credentials.username}\r\n                label=\"Email\"\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n            <div style={{ marginBottom: \"0.5rem\" }}>\r\n              <TextField\r\n                error={isError}\r\n                helperText={isError ? \"incorrect email or password\" : \"\"}\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                value={credentials.password}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n            <div style={{ marginBottom: \"0.5rem\" }}>\r\n              <Button type=\"submit\" variant=\"contained\">\r\n                Sign in\r\n              </Button>\r\n            </div>\r\n            <div>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={moveToRegistration}\r\n              >\r\n                registration\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AppContext } from \"../App\";\r\nimport {\r\n  authFetch,\r\n  getUserId,\r\n  logout,\r\n  useAuth,\r\n} from \"../services/AuthProvider\";\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\n\r\nfunction UserProfile() {\r\n  let context = useContext(AppContext);\r\n\r\n  let history = useHistory();\r\n\r\n  let [isAuth] = useAuth();\r\n\r\n  let userId = getUserId();\r\n\r\n  const [avaFile, setAvaFile] = useState();\r\n\r\n  const [userData, setUserData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    registrationDate: \"\",\r\n    role: {\r\n      name: \"\",\r\n    },\r\n  });\r\n\r\n  const [avaUrl, setAvaUrl] = useState(\"\");\r\n\r\n  const [emailError, setEmailError] = useState({\r\n    error: false,\r\n    text: \"Email\",\r\n  });\r\n\r\n  const [isEdit, setReadOnly] = useState({\r\n    readOnly: true,\r\n  });\r\n\r\n  const [isEditOpen, setEditOpen] = useState(false);\r\n\r\n  const onInputChange = ({ target: { name, value } }) => {\r\n    setUserData({ ...userData, [name]: value });\r\n    setEmailError({\r\n      error: false,\r\n      text: \"Email\",\r\n    });\r\n  };\r\n\r\n  const fetchUserData = () => {\r\n    if (!isAuth) return;\r\n    authFetch(`${window.location.origin}/users/${userId}`)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          logout();\r\n          context.showAuth();\r\n          history.push(\"/\");\r\n          return { result: {} };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        setUserData(body);\r\n        setAvaUrl(body.avatarUrl);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    let url = URL.createObjectURL(acceptedFiles[0]);\r\n    setAvaUrl(url);\r\n    // setUserData({...userData, avatarUrl: url});\r\n    setAvaFile(acceptedFiles[0]);\r\n  }, []);\r\n\r\n  const onUserSave = () => {\r\n    if (avaFile !== undefined) {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", avaFile);\r\n      formData.append(\"xScale\", 1);\r\n      formData.append(\"yScale\", 1);\r\n      let url = new URL(window.location.origin + \"/images/header/upload\");\r\n      authFetch(url, { method: \"POST\", body: formData })\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            return response.json();\r\n          } else if (response.status === 403) {\r\n            logout();\r\n            context.showAuth(true);\r\n            history.push(\"/\");\r\n            return { url: \"\" };\r\n          } else {\r\n            throw new Error(\"Error code: \" + response.status);\r\n          }\r\n        })\r\n        .then((body) => {\r\n          let url = body.url;\r\n          setAvaFile(undefined);\r\n          saveUser(url);\r\n          setEditOpen(false);\r\n          setReadOnly({ readOnly: true });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          history.push(\"/error\");\r\n        });\r\n    }\r\n    if (avaFile === undefined) {\r\n      saveUser();\r\n      setEditOpen(false);\r\n      setReadOnly({ readOnly: true });\r\n    }\r\n  };\r\n\r\n  const saveUser = (url) => {\r\n    authFetch(`${window.location.origin}/users/${userId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        firstName: userData.firstName,\r\n        lastName: userData.lastName,\r\n        email: userData.email,\r\n        avatarUrl: url === undefined ? userData.avatarUrl : url,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else if (response.status === 403) {\r\n          logout();\r\n          context.showAuth(true);\r\n          history.push(\"/\");\r\n          return { result: false };\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        if (body.result === true) {\r\n          setAvaUrl(url === undefined ? userData.avatarUrl : url);\r\n          //ava change\r\n          if (url !== undefined){\r\n            context.avatar.fetch(!context.avatar.trigger);\r\n          }\r\n        } else {\r\n          setEmailError({\r\n            error: true,\r\n            text: \"This email address is already taken\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const onOpenEdit = () => {\r\n    setEditOpen(!isEditOpen);\r\n    setReadOnly({ readOnly: !isEdit.readOnly });\r\n  };\r\n\r\n  const { getRootProps, getInputProps, isDragActive, isDragReject } =\r\n    useDropzone({\r\n      onDrop,\r\n      accept: [\"image/jpeg\", \"image/png\"],\r\n      minSize: 0,\r\n      multiple: false,\r\n    });\r\n\r\n  const getMessage = () => {\r\n    if (isDragReject) {\r\n      return (\r\n        <div style={{ color: \"red\", margin: \"0.5rem\" }}>\r\n          Files not supported\r\n        </div>\r\n      );\r\n    } else if (isDragActive) {\r\n      return (\r\n        <div style={{ color: \"black\", margin: \"0.5rem\" }}>\r\n          Drop the files here ...\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ color: \"black\", margin: \"0.5rem\" }}>\r\n          Drag 'n' drop image here, or click to select\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => fetchUserData(), []);\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <h3 style={{ textAlign: \"center\" }}>User profile</h3>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <div style={{ alignSelf: \"center\" }}>\r\n            <IconButton onClick={onOpenEdit}>\r\n              {isEditOpen ? (\r\n                <CloseIcon color=\"primary\" />\r\n              ) : (\r\n                <EditIcon color=\"primary\" />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          {isEditOpen ? (\r\n            <div style={{ alignSelf: \"center\" }}>\r\n              <IconButton onClick={onUserSave}>\r\n                <DoneIcon color=\"primary\" />\r\n              </IconButton>\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            width: 200,\r\n            justifyContent: \"center\",\r\n            marginRight: \"2rem\",\r\n          }}\r\n        >\r\n          <div>\r\n            <div>\r\n              <img\r\n                style={{\r\n                  width: \"100%\",\r\n                  border: \"solid\",\r\n                  borderWidth: 1,\r\n                  borderRadius: 15,\r\n                  color: \"rgb(200,200,200)\",\r\n                }}\r\n                src={avaUrl}\r\n              />\r\n            </div>\r\n            {isEditOpen ? (\r\n              <div\r\n                {...getRootProps()}\r\n                style={{\r\n                  background: \"rgb(230,230,230)\",\r\n                  border: \"dotted\",\r\n                  color: \"rgb(170,170,170)\",\r\n                }}\r\n              >\r\n                <input {...getInputProps()} />\r\n                <div\r\n                  style={{\r\n                    height: 60,\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  {getMessage()}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div style={{ margin: \"1rem\", display: \"flex\" }}>\r\n            <TextField\r\n              name=\"firstName\"\r\n              value={userData.firstName}\r\n              inputProps={isEdit}\r\n              style={{ width: \"100%\" }}\r\n              helperText=\"First name\"\r\n              onChange={onInputChange}\r\n            />\r\n            {isEditOpen ? (\r\n              <EditIcon\r\n                color=\"primary\"\r\n                style={{ marginTop: 10, marginLeft: 10 }}\r\n              />\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n          <div style={{ margin: \"1rem\", display: \"flex\" }}>\r\n            <TextField\r\n              name=\"lastName\"\r\n              value={userData.lastName}\r\n              inputProps={isEdit}\r\n              style={{ width: \"100%\" }}\r\n              helperText=\"Last name\"\r\n              onChange={onInputChange}\r\n            />\r\n            {isEditOpen ? (\r\n              <EditIcon\r\n                color=\"primary\"\r\n                style={{ marginTop: 10, marginLeft: 10 }}\r\n              />\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n          <div style={{ margin: \"1rem\", display: \"flex\" }}>\r\n            <TextField\r\n              name=\"email\"\r\n              value={userData.email}\r\n              error={emailError.error}\r\n              helperText={emailError.text}\r\n              inputProps={isEdit}\r\n              style={{ width: \"100%\" }}\r\n              onChange={onInputChange}\r\n            />\r\n            {isEditOpen ? (\r\n              <EditIcon\r\n                color=\"primary\"\r\n                style={{ marginTop: 10, marginLeft: 10 }}\r\n              />\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n          <div style={{ margin: \"1rem\" }}>\r\n            <TextField\r\n              name=\"registrationDate\"\r\n              value={userData.registrationDate}\r\n              type=\"datetime-local\"\r\n              helperText=\"Registration date\"\r\n              onChange={onInputChange}\r\n            />\r\n          </div>\r\n          {/* <div style={{ margin: \"1rem\" }}>\r\n            <TextField\r\n              value={userData.role.name}\r\n              helperText=\"Permission\"\r\n              inputProps={isEdit}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n","import { Button, CircularProgress, TextField } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Registration() {\r\n  let history = useHistory();\r\n\r\n  const [userData, setUserData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  let page = {\r\n    form: \"form\",\r\n    progress: \"progress\",\r\n    success: \"success\",\r\n  };\r\n\r\n  const [emailError, setEmailError] = useState({\r\n    error: false,\r\n    text: \"Email\",\r\n  });\r\n\r\n  const [passwordError, setPasswordError] = useState({\r\n    error: false,\r\n    text: \"Password\",\r\n  });\r\n\r\n  const [status, setStatus] = useState(page.form);\r\n\r\n  const onInputChange = ({ target: { name, value } }) => {\r\n    setUserData({ ...userData, [name]: value });\r\n    setEmailError({\r\n      error: false,\r\n      text: \"Email\",\r\n    });\r\n    setPasswordError({\r\n      error: false,\r\n      text: \"Password\",\r\n    });\r\n  };\r\n\r\n  const register = () => {\r\n    setStatus(page.progress);\r\n    fetch(`${window.location.origin}/users`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(userData),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        if (body.result) {\r\n          setStatus(page.success);\r\n        } else {\r\n          if (body.isEmailError) {\r\n            setEmailError({\r\n              error: true,\r\n              text: \"This email address is already taken\",\r\n            });\r\n          } else if (body.isPasswordError) {\r\n            setPasswordError({\r\n              error: true,\r\n              text: \"Password must be 8 characters long\",\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const renderDetails = (e) => {\r\n    if (e === page.form) {\r\n      return (\r\n        <div>\r\n          <div style={{ margin: \"1rem\", display: \"flex\" }}>\r\n            <TextField\r\n              name=\"firstName\"\r\n              value={userData.firstName}\r\n              style={{ width: \"100%\" }}\r\n              helperText=\"First name\"\r\n              onChange={onInputChange}\r\n            />\r\n          </div>\r\n          <div style={{ margin: \"1rem\", display: \"flex\" }}>\r\n            <TextField\r\n              name=\"lastName\"\r\n              value={userData.lastName}\r\n              style={{ width: \"100%\" }}\r\n              helperText=\"Last name\"\r\n              onChange={onInputChange}\r\n            />\r\n          </div>\r\n          <div style={{ margin: \"1rem\", display: \"flex\" }}>\r\n            <TextField\r\n              name=\"email\"\r\n              value={userData.email}\r\n              error={emailError.error}\r\n              helperText={emailError.text}\r\n              style={{ width: \"100%\" }}\r\n              onChange={onInputChange}\r\n            />\r\n          </div>\r\n          <div style={{ margin: \"1rem\", display: \"flex\" }}>\r\n            <TextField\r\n              name=\"password\"\r\n              value={userData.password}\r\n              error={passwordError.error}\r\n              helperText={passwordError.text}\r\n              style={{ width: \"100%\" }}\r\n              type=\"password\"\r\n              onChange={onInputChange}\r\n            />\r\n          </div>\r\n          {/* <div>captcha</div> */}\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <Button color=\"primary\" onClick={register}>\r\n              register\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (e === page.progress) {\r\n      return (\r\n        <div style={{ marginTop: \"3rem\" }}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h3>Please check your email for further instructions</h3>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <h3 style={{ textAlign: \"center\" }}>Registration</h3>\r\n      </div>\r\n      <hr />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          // flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {renderDetails(status)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Registration;\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\n\r\nfunction UserActivate() {\r\n  let { id } = useParams();\r\n\r\n  let history = useHistory();\r\n\r\n  let progress = {\r\n    activating: \"activating\",\r\n    complete: \"complete\",\r\n    rejected: \"rejected\",\r\n  };\r\n\r\n  const [status, setStatus] = useState(progress.rejected);\r\n\r\n  const verifyToken = () => {\r\n    fetch(`${window.location.origin}/users/activate/${id}`, {\r\n      method: \"PUT\",\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"Error code: \" + response.status);\r\n        }\r\n      })\r\n      .then((body) => {\r\n        if (body.result) {\r\n          setStatus(progress.complete);\r\n        } else {\r\n          setStatus(progress.rejected)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  const renderProgress = (p) => {\r\n    if (p === progress.activating) {\r\n      return (\r\n        <div>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    } else if (p === progress.complete) {\r\n      return <h3>Account succsecifuly activated! You can now log in!</h3>;\r\n    } else {\r\n      return (\r\n        <h3>\r\n          Account has already been activated or the activation link is out of\r\n          date\r\n        </h3>\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => verifyToken(), []);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      {renderProgress(status)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserActivate;\r\n","import { MenuItem, MenuList, Paper } from \"@material-ui/core\";\r\n\r\nfunction LeftMenu() {\r\n  return (\r\n    <Paper>\r\n      <MenuList>\r\n        <MenuItem>Posts</MenuItem>\r\n      </MenuList>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default LeftMenu;\r\n","import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport PostList from \"./components/PostList\";\nimport Footer from \"./components/Footer\";\nimport Post from \"./components/Post\";\nimport UserPostList from \"./components/UserPostList\";\nimport EditPost from \"./components/EditPost\";\nimport { useAuth } from \"./services/AuthProvider\";\nimport NotFound from \"./components/NotFound\";\nimport Login from \"./components/Login\";\nimport UserProfile from \"./components/UserProfile\";\nimport Registration from \"./components/Registration\";\nimport UserActivate from \"./components/UserActivate\";\nimport LeftMenu from \"./components/LeftMenu\";\nimport { Autorenew } from \"@material-ui/icons\";\n\nexport const AppContext = React.createContext();\n\nfunction App() {\n  let [isAuth] = useAuth();\n\n  const [showAuth, setShowAuth] = useState(false);\n\n  return (\n    <AppContext.Provider\n      value={{ showAuth: setShowAuth, avatar: { trigger: false, fetch: null } }}\n    >\n      <Router>\n        <Login show={showAuth} handleClose={setShowAuth} />\n        <Header />\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexGrow: 1,\n            flexShrink: 1,\n            flexBasis: \"auto\",\n          }}\n        >\n          <div style={{width: \"25%\"}}>\n            <div style={{marginRight: \"5rem\"}}>\n              <LeftMenu />\n            </div>\n          </div>\n          <div style={{ width: \"50%\" }}>\n            <Switch>\n              <Route exact path=\"/\">\n                <PostList />\n              </Route>\n              <Route path=\"/post/view/:id\">\n                <Post />\n              </Route>\n              <Route path=\"/post/edit/:pathId\">\n                {() => {\n                  if (isAuth) {\n                    return <EditPost isEdit={true} />;\n                  } else {\n                    setShowAuth(true);\n                    return <Redirect to=\"/\" />;\n                  }\n                }}\n              </Route>\n              <Route path=\"/post/new\">\n                {() => {\n                  if (isAuth) {\n                    return <EditPost isNew={true} />;\n                  } else {\n                    setShowAuth(true);\n                    return <Redirect to=\"/\" />;\n                  }\n                }}\n              </Route>\n              <Route path=\"/post/user\">\n                {() => {\n                  if (isAuth) {\n                    return <UserPostList />;\n                  } else {\n                    setShowAuth(true);\n                    return <Redirect to=\"/\" />;\n                  }\n                }}\n              </Route>\n              <Route path=\"/profile\">\n                {() => {\n                  if (isAuth) {\n                    return <UserProfile />;\n                  } else {\n                    setShowAuth(true);\n                    return <Redirect to=\"/\" />;\n                  }\n                }}\n              </Route>\n              <Route path=\"/registration\">\n                <Registration/>\n              </Route>\n              <Route path=\"/user/activate/:id\">\n                <UserActivate/>\n              </Route>\n              <Route path=\"/error\">\n                <h1>Error</h1>\n              </Route>\n              <NotFound />\n            </Switch>\n          </div>\n          <div></div>\n        </div>\n      </Router>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}